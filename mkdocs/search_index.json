{
    "docs": [
        {
            "location": "/", 
            "text": "PhySpeTree: automatically reconstructing phylogenetic species tree\n\n\nIntroduction\n\n\nUnderstanding phylogenetic relationships between different species is crucial for evolutionary studies. Reconstructing the\nphylogenetic species tree, a branching diagram, is particularly useful in inferring evolutionary relationships. For example,\nthe tree-of-life provides a remarkable view of organizing principles of the biological world. So, the exact species tree to\nbe reconstructed is necessary, but the process of reconstructing the species or gene tree is very tedious.\n\n\nHere, we developed an easy-to-use package named PhySpeTree that is convenient to reconstruct species trees by one command line.\nTwo independent pipelines were included by using the most adopted small subunit ribosomal RNA (SSU rRNA) and concatenated highly\nconserved proteins (HCP), respectively. A distinct advantage is that users only need to input species names and PhySpeTree\nautomatically downloads and analyzes sequences of SSU rRNA or HCP from about 4,000 organisms.\n\n\nPhySpeTree workflow\n\n\n\n\nPhySpeTree workflow includes the following steps:\n\n\n\n\n\n\nPrepare organisms names (abbreviated name) to reconstruct species tree as \nspecies abbreviated names\n\n\n\n\n\n\nTwo parallel pipelines to reconstruct species tree (SSU rRNA (--sran) or highly conserved proteins (--hcp)).\n\n\n\n\n\n\nQuerying, parsing and retrieving FASTA format data.\n\n\n\n\n\n\nMultiple sequence alignment by Muscle or ClustalW.\n\n\n\n\n\n\nConcatenate highly conserved proteins by PhySpeTree.\n\n\n\n\n\n\nSelect conserved blocks by Gblosks.\n\n\n\n\n\n\nReconstruct species tree by RAxML or FastTree.\n\n\n\n\n\n\nOutput the reconstruct phylogenetic tree files.\n\n\n\n\n\n\nFeatures\n\n\n\n\n\n\nEasy to use (one command line automatically reconstruct species tree).\n\n\n\n\n\n\nMulti-selection (select reconstruct species tree by HCP method or SSU rRNA method).\n\n\n\n\n\n\nAdjustable parameters (the users can choice any enable parameters with corresponding invoke software).\n\n\n\n\n\n\nProvide species names (species abbreviated names) as input only.\n\n\n\n\n\n\nCombine best phylogenetic tree (combine multiple tree to a consensus tree).\n\n\n\n\n\n\nView tree by iTol (easily use iview module to annotate tree).\n\n\n\n\n\n\nFlexible (more software to be invoked with corresponding enable parameters).\n\n\n\n\n\n\nVersatile software (can build species tree or gene tree and also ability extend new species to tree).\n\n\n\n\n\n\nPhySpeTree module:\n\n\n\n\nautobuild\n: Automatically reconstruct phylogenetic tree\n\n\n\n\nPhySpeTree autobuild -i species_name_list.txt -o Output\n\n\n\n\n\n\nbuild\n: Reconstruct phylogenetic tree\n\n\n\n\nPhySpeTree build -i species.fasta -o Output\n\n\n\n\n\n\ncombine\n: Combine multiple best phylogenetic tree \n\n\n\n\nPhySpeTree combine -i multiple_tree.tree -o Output\n\n\n\n\n\n\niview\n: View and annotating phylogenetic tree by iTol\n\n\n\n\nPhySpeTree iview -i species_name_list.txt -o ivew -range phylum \n\n\n\n\n\n\ncheck\n:Check organisms for extend phylogenetic tree \n\n\n\n\nPhySpeTree check -i organisms.txt -o checkout --protein", 
            "title": "Home"
        }, 
        {
            "location": "/#physpetree-automatically-reconstructing-phylogenetic-species-tree", 
            "text": "", 
            "title": "PhySpeTree: automatically reconstructing phylogenetic species tree"
        }, 
        {
            "location": "/#introduction", 
            "text": "Understanding phylogenetic relationships between different species is crucial for evolutionary studies. Reconstructing the\nphylogenetic species tree, a branching diagram, is particularly useful in inferring evolutionary relationships. For example,\nthe tree-of-life provides a remarkable view of organizing principles of the biological world. So, the exact species tree to\nbe reconstructed is necessary, but the process of reconstructing the species or gene tree is very tedious.  Here, we developed an easy-to-use package named PhySpeTree that is convenient to reconstruct species trees by one command line.\nTwo independent pipelines were included by using the most adopted small subunit ribosomal RNA (SSU rRNA) and concatenated highly\nconserved proteins (HCP), respectively. A distinct advantage is that users only need to input species names and PhySpeTree\nautomatically downloads and analyzes sequences of SSU rRNA or HCP from about 4,000 organisms.", 
            "title": "Introduction"
        }, 
        {
            "location": "/#physpetree-workflow", 
            "text": "PhySpeTree workflow includes the following steps:    Prepare organisms names (abbreviated name) to reconstruct species tree as  species abbreviated names    Two parallel pipelines to reconstruct species tree (SSU rRNA (--sran) or highly conserved proteins (--hcp)).    Querying, parsing and retrieving FASTA format data.    Multiple sequence alignment by Muscle or ClustalW.    Concatenate highly conserved proteins by PhySpeTree.    Select conserved blocks by Gblosks.    Reconstruct species tree by RAxML or FastTree.    Output the reconstruct phylogenetic tree files.", 
            "title": "PhySpeTree workflow"
        }, 
        {
            "location": "/#features", 
            "text": "Easy to use (one command line automatically reconstruct species tree).    Multi-selection (select reconstruct species tree by HCP method or SSU rRNA method).    Adjustable parameters (the users can choice any enable parameters with corresponding invoke software).    Provide species names (species abbreviated names) as input only.    Combine best phylogenetic tree (combine multiple tree to a consensus tree).    View tree by iTol (easily use iview module to annotate tree).    Flexible (more software to be invoked with corresponding enable parameters).    Versatile software (can build species tree or gene tree and also ability extend new species to tree).", 
            "title": "Features"
        }, 
        {
            "location": "/#physpetree-module", 
            "text": "autobuild : Automatically reconstruct phylogenetic tree   PhySpeTree autobuild -i species_name_list.txt -o Output   build : Reconstruct phylogenetic tree   PhySpeTree build -i species.fasta -o Output   combine : Combine multiple best phylogenetic tree    PhySpeTree combine -i multiple_tree.tree -o Output   iview : View and annotating phylogenetic tree by iTol   PhySpeTree iview -i species_name_list.txt -o ivew -range phylum    check :Check organisms for extend phylogenetic tree    PhySpeTree check -i organisms.txt -o checkout --protein", 
            "title": "PhySpeTree module:"
        }, 
        {
            "location": "/install/", 
            "text": "Install\n\n\n1. PhySpeTree is released on PyPI, so all you need install:\n\n\n$ pip install PhySpeTree\n\n\n\n\nTo upgrade to latest version:\n\n\n$ pip install --upgrade PhySpeTree\n\n\n\n\n2. Download PhySpeTree released version form PypI:\n\n\n\n\n\n\nDownload\n latest released version\n\n\n\n\n\n\nlocal installation:\n\n\n\n\n\n\npip install PhySpeTree-*.tar.gz\n\n\n\n\n3. You can install PhySpeTree by downloading the latest released version form github:\n\n\n\n\n\n\nDownload\n latest released version \n.tar.gz\n file.\n\n\n\n\n\n\nLocal installation:\n\n\n\n\n\n\n$ pip install physpetools-v*.tar.gz\n\n\n\n\n\n4. Use the git command clone PhySpeTree to install it:\n\n\n$ git clone git@github.com:xiaofeiyangyang/physpetools.git\n\n\n\n\n$ cd physpetools\n\n\n\n\n\n$ python setup.py install", 
            "title": "Install"
        }, 
        {
            "location": "/install/#install", 
            "text": "", 
            "title": "Install"
        }, 
        {
            "location": "/install/#1-physpetree-is-released-on-pypi-so-all-you-need-install", 
            "text": "$ pip install PhySpeTree  To upgrade to latest version:  $ pip install --upgrade PhySpeTree", 
            "title": "1. PhySpeTree is released on PyPI, so all you need install:"
        }, 
        {
            "location": "/install/#2-download-physpetree-released-version-form-pypi", 
            "text": "Download  latest released version    local installation:    pip install PhySpeTree-*.tar.gz", 
            "title": "2. Download PhySpeTree released version form PypI:"
        }, 
        {
            "location": "/install/#3-you-can-install-physpetree-by-downloading-the-latest-released-version-form-github", 
            "text": "Download  latest released version  .tar.gz  file.    Local installation:    $ pip install physpetools-v*.tar.gz", 
            "title": "3. You can install PhySpeTree by downloading the latest released version form github:"
        }, 
        {
            "location": "/install/#4-use-the-git-command-clone-physpetree-to-install-it", 
            "text": "$ git clone git@github.com:xiaofeiyangyang/physpetools.git  $ cd physpetools  $ python setup.py install", 
            "title": "4. Use the git command clone PhySpeTree to install it:"
        }, 
        {
            "location": "/usage/", 
            "text": "Usage and Examples\n\n\nautobuild\n\n\nUsers should prepare a TXT file contain the species names (abbreviated names), such as \norganism_example_list.txt\n\n\nUse \nautobuild\n in command line like this:\n\n\n$ PhySpeTree -i organism_example_list.txt [options]*\n\n\n\n\nAutobuild options\n\n\n\n\n\n\n\n\noption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n-h\n\n\nPrint help message and exits.\n\n\n\n\n\n\n-i\n\n\nInput a TXT file contain the species names (abbreviated names) are same with KEGG species abbreviation.\n\n\n\n\n\n\n-o\n\n\nA directory include output data (tree files). The default output data name is Outdata.\n\n\n\n\n\n\n-t\n\n\nSpecify the number of processing threads (CPUs) to reconstruct phylogenetic tree. The default is 1.\n\n\n\n\n\n\n-e\n\n\nThe extended data should be FASTA format to extend phylogenetic tree by --ehcp or --esrna option.\n\n\n\n\n\n\n--hcp\n\n\nSpecify the hcp (highly conserved protein) method to reconstruct phylogenetic tree. The default method is hcp.\n\n\n\n\n\n\n--ehcp\n\n\nThe ehcp mode is use highly conserved proteins with extend highly conserved protein (users provide) to reconstruct phylogenetic tree.\n\n\n\n\n\n\n--srna\n\n\nThe srna (SSU rRNA) method is use SSU rRNA data to reconstruct phylogenetic tree.\n\n\n\n\n\n\n--esrna\n\n\nThe esrna mode is use SSU RNA sequence with extend SSU RNA sequence (users provide) to reconstruct phylogenetic tree.\n\n\n\n\n\n\n\n\nexample\n\n\nWhen use autobuild command to build species tree, users should prepare a organism list with species names (abbreviated names) are same with \nKEGG organism list\n.\n\n\nList format like follow or download \norganism_example_list.txt\n\n\n$ cat organism_example_list.txt\naca\nace\nacl\nacn\naco\nacp\nadg\nadk\naeh\naeq\n\n\n\n\nAuto build phylogenetic tree by highly conserved proteins method:\n\n\n$ PhySpeTree autobuild -i organism_example_list.txt --hcp\nLoading organisms names success.....\n\nThe result are store in:Outdata\n\nnow loading data and constructing species phylogenetic tree......\nNow loading data and constructing species phylogenetic tree......\n2016-08-18 15:32:06,770 kegg DB INFO: Read organisms names successful\n2016-08-18 15:32:08,380 kegg DB INFO: Retrieve highly conserved protein 'Ribosomal protein L1' success and store in p1.fasta file\n2016-08-18 15:32:09,702 kegg DB INFO: Retrieve highly conserved protein 'DNA-directed RNA polymerase subunit alpha' success and store in p2.fasta file\n2016-08-18 15:32:11,352 kegg DB INFO: Retrieve highly conserved protein 'Leucyl-tRNA synthetase' success and store in p3.fasta file\n2016-08-18 15:32:12,786 kegg DB INFO: Retrieve highly conserved protein 'Metal-dependent proteases with chaperone activity' success and store in p4.fasta file\n2016-08-18 15:32:14,318 kegg DB INFO: Retrieve highly conserved protein 'Phenylalanine-tRNA synthethase alpha subunit' success and store in p5.fasta file\n2016-08-18 15:32:15,854 kegg DB INFO: Retrieve highly conserved protein 'Predicted GTPase probable translation factor' success and store in p6.fasta file\n2016-08-18 15:32:17,049 kegg DB INFO: Retrieve highly conserved protein 'Ribosomal protein L11' success and store in p7.fasta file\n2016-08-18 15:32:18,316 kegg DB INFO: Retrieve highly conserved protein 'Ribosomal protein L13' success and store in p8.fasta file\n\n\n\n\n\nWhen auto build phylogenetic tree by \nhcp\n method was completed, you will get files layout like this:\n\n\nlog.log\nOutdata/\n        RAxML_bestTree.T1\n        RAxML_bipartitions.T1\n        RAxML_bipartitionsBranchLabels.T1\n        RAxML_bootstrap.T1\n        RAxML_info.T1\n   temp/\n        conserved_protein20160817210902/\n                                       \u3000p1.fasta\n                                       \u3000p2.fasta\n                                       \u3000p3.fasta\n                                       \u3000......\n        hcp_alignment20160817210936/\n                                    p1.fasta\n                                    p2.fasta\n                                    p2.fasta\n                                    ......\n        concatenate20160817210938/\n                                  concatenate.fasta\n                                  concatenate.fasta-gb1\n                                  concatenate.fasta-gb1.htm\n                                  concatenate.fasta-gb1.phy\n\n\n\n\n\n\nlog.log: The log information of PhySpeTree.\n\n\n\n\nOutdata: Contain phylogenetic tree output result. \n\n\n\n\nRAxML_bestTree.T1: Reconstruct phylogenetic tree by RAxML, it's best ML search tree. \n\n\nRAxML_bipartitions.T1: Bipartition tree by RAxML.\n\n\nRAxML_bipartitionsBranchLabels.T1: Bipartition tree by constructed by RAxML with branch length lables.\n\n\nRAxML_bootstrap.T1: Bootstrap result by RAxML\n\n\nRAxML_info.T1: The info of run RAxMl.\n\n\n\n\n\n\n\n\ntemp: The temp data by PhySpeTree, \nit's very important for users to check the key steps\n.\n\n\n\n\nconserved_protein: Contain highly conserved proteins retrieve form KEGG database.\n\n\nhcp_alignment: Contain highly conserved proteins do multiple sequence alignment by muscle.\n\n\n\n\nconcatenate: Contain the concatenate highly conserved proteins result and select conserved blocks data.\n\n\n\n\nconcatenate.fasta: Concatenate highly conserved proteins result.\n\n\nconcatenate.fasta-gb1: Select conserved blocks result (by Gblocks).\n\n\nconcatenate.fasta-gb1.htm: Select conserved blocks result view by html format.\n\n\nconcatenate.fasta-gb1.phy: Convert FASTA format to PHYLIP format\n\n\n\n\n\n\n\n\n\n\n\n\nAuto build phylogenetic tree by SSU rRNA method:\n\n\n$ PhySpeTree autobuild -i organism_example_list.txt --srna\nLoading organisms names success.....\n\nThe result are store in:Outdata\n\nNow loading data and constructing species phylogenetic tree......\n2016-08-18 15:29:31,528 16s DB INFO: Read organisms names success\n2016-08-18 15:29:38,166 16s DB INFO: Retrieve organism 'aca' 16s SSU RNA sequences data success\n2016-08-18 15:29:40,236 16s DB INFO: Retrieve organism 'ace' 16s SSU RNA sequences data success\n2016-08-18 15:29:42,356 16s DB INFO: Retrieve organism 'acl' 16s SSU RNA sequences data success\n2016-08-18 15:29:44,615 16s DB INFO: Retrieve organism 'acn' 16s SSU RNA sequences data success\n2016-08-18 15:29:46,868 16s DB INFO: Retrieve organism 'aco' 16s SSU RNA sequences data success\n2016-08-18 15:29:49,119 16s DB INFO: Retrieve organism 'acp' 16s SSU RNA sequences data success\n2016-08-18 15:29:51,392 16s DB INFO: Retrieve organism 'adg' 16s SSU RNA sequences data success\n\n\n\n\n\nWhen auto build phylogenetic tree by \nsrna\n method was completed, you will get files layout like this:\n\n\nlog.log\nOutdata/\n        RAxML_bestTree.T1\n        RAxML_bipartitions.T1\n        RAxML_bipartitionsBranchLabels.T1\n        RAxML_bootstrap.T1\n        RAxML_info.T1\n   temp/\n        16srnadata20160818145209/\n                                 16srandata.fasta\n\n        16srna_alignment20160818145236/\n                                  16srandata.fasta\n                                  16srandata.fasta-gb1\n                                  16srandata.fasta-gb1.htm\n                                  16srandata.fasta-gb1.phy\n\n\n\n\n\n\nlog.log: The log information of PhySpeTree.\n\n\n\n\nOutdata: Contain phylogenetic tree output result. \n\n\n\n\nRAxML_bestTree.T1: Reconstruct phylogenetic tree by RAxML, it's best ML search tree. \n\n\nRAxML_bipartitions.T1: Bipartition tree by RAxML.\n\n\nRAxML_bipartitionsBranchLabels.T1: Bipartition tree by constructed by RAxML with branch length lables.\n\n\nRAxML_bootstrap.T1: Bootstrap result by RAxML\n\n\nRAxML_info.T1: The info of run RAxMl.\n\n\n\n\n\n\n\n\ntemp: The temp data by PhySpeTree, \nit's very important to users to check the key steps\n.\n\n\n\n\n\n\n16srnadata: Contain SSU rRNA data retrieved form SILVA database.\n\n\n\n\n16srnadata.fasta: FASTA format data contain input organism SSU rRNA data.\n\n\n\n\n\n\n\n\n16srna_alignment: Contain the concatenate highly conserved proteins result and select conserved blocks data.\n\n\n\n\n16srandata.fasta: Contain SSU rRNA data with multiple sequence alignment already.\n\n\n16srandata.fasta-gb1: Select conserved blocks result (by Gblocks).\n\n\n16srandata.fasta-gb1.htm: Select conserved blocks result view by html format.\n\n\n16srandata.fasta-gb1.phy: Convert FASTA format to PHYLIP format\n\n\n\n\n\n\n\n\n\n\n\n\nAdvance options\n\n\nUsers enable choice more detail options with PhySpeTree call software, detail advance options input\n\nmust be enclosed in single quotes\n.\n\n\nThe following is an example of using RAxML advanced options:\n\n\n$ PhySpeTree -i organism_example_list.txt --raxml '-f a -m GTRGAMMA  -p 12345 -x 12345 -# 100 -n T1'\n\n\n\n\n--muscle\n\n\nMultiple sequence alignment by muscle. The default multiple sequence alignment software is Muscle.\n\n\n--muscle_p\n\n\nSet Muscle advance parameters. The default is \n-maxiter 100\n. More options about muslce please to see \nMUSCLE Manual\n\n\nThe default option:\n\n\n\n\n\n\n\n\noption\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\n-maxiter\n\n\nmaximum number of iterations to run is set 100.\n\n\n\n\n\n\n\n\n--clustalw\n\n\nMultiple sequence alignment by clustalw2.\n\n\n\n--clustalw_p\n\n\nSet clustalw2 advance parameters. Here use clustalw default parameters. More options about clustalw please to see \nClustalw Help\n.\n\n\n--gblocks\n\n\nSet Gblocks advance parameters. The default is \n-t=p -e=-gb1\n. More options about Gblocks please to see \nGblocks documentation\n.\n\n\nThe default option:\n\n\n\n\n\n\n\n\noption\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\n-t\n\n\nChoice type of sequence. The PhySpeTree default set is protein.\n\n\n\n\n\n\n-e\n\n\nEneric file extensionc. PhySpeTree set default is -gbl1.\n\n\n\n\n\n\n\n\n--ranxml\n\n\nReconstruct phylogenetic tree by RAxML. The default build tree software is RAxML.\n\n\n\n--raxml_p\n\n\nSet reconstruct phylogenetic tree arguments with RAxML. The default is \n-f a -m PROTGAMMAJTTX  -p 12345 -x 12345 -# 100 -n T1\n. More options about RAxMl please to see \nRAxML Manual\n.\n\n\nThe default option:\n\n\n\n\n\n\n\n\noption\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\n-f\n\n\nselect algorithm. The PhySpeTree default set is \na\n, rapid Bootstrap analysis and search for best\u00adscoring ML tree in one program run.\n\n\n\n\n\n\n-m\n\n\nModel of Binary (Morphological), Nucleotide, Multi\u00adState, or Amino Acid Substitution. The PhySpeTree default set is PROTGAMMAJTTX.\n\n\n\n\n\n\n-p\n\n\nSpecify a random number seed for the parsimony inferences. The physep default set is 12345.\n\n\n\n\n\n\n-x\n\n\nSpecify an integer number (random seed) and turn on rapid bootstrapping. The PhySpeTree default set is 12345.\n\n\n\n\n\n\n-N\n\n\nThe same with -# specify the number of alternative runs on distinct starting trees. The PhySpeTree default set is 100.\n\n\n\n\n\n\n\n\n--fasttree\n\n\nReconstruct phylogenetic tree by FastTree.\n\n\n--fasttree_p\n\n\nSet more FastTree advance parameters. More options about clustalw please to see \nFastTree\n.\n\n\nbuild\n\n\nUsers can reconstruct phylogenetic tree use \nbuild\n module by manually prepared files. such as, SSU rRNA sequence or highly conserved proteins.\n\n\nUse \nbuild\n module in command line to reconstruct phylogenetic tree:\n\n\n\n\nbuild phylogenetic tree by highly conserved proteins method:\n\n\n\n\n$ PhySpeTree build -i example_hcp -o output --hcp\n\n\n\n\n\n\nbuild phylogenetic tree by SSU rRNA sequence method:\n\n\n\n\n$ PhySpeTree build -i example_16s_ssurna.fasta -o output --sran\n\n\n\n\nbuild options\n\n\n\n\n\n\n\n\noption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n-h\n\n\nPrint help message and exits.\n\n\n\n\n\n\n-i\n\n\nInput a TXT file contain the species names (abbreviated names) are same with KEGG species abbreviation.\n\n\n\n\n\n\n-o\n\n\nA directory include output data (tree files). The default output data name is Outdata.\n\n\n\n\n\n\n-t\n\n\nSpecify the number of processing threads (CPUs) to reconstruct phylogenetic tree. The default is 1.\n\n\n\n\n\n\n-e\n\n\nThe extended data should be FASTA format to extend phylogenetic tree by --ehcp or --esrna option.\n\n\n\n\n\n\n--hcp\n\n\nSpecify the hcp (highly conserved protein) method to reconstruct phylogenetic tree. The default method is hcp.\n\n\n\n\n\n\n--srna\n\n\nThe srna (SSU rRNA) method is use SSU rRNA data to reconstruct phylogenetic tree.\n\n\n\n\n\n\n\n\nexample\n\n\nBuild phylogenetic tree by highly conserved proteins\n\n\nWhen use build to reconstruct phylogenetic tree, you should prepare a directory contain highly conserved proteins such as \nexample_build_hcp\n. In this example\ncontain ten highly conserved proteins p1~p10, in each highly conserved proteins contain 10 organism.\n\n\nDownload \nexample_build_hcp\n you can use the tar command to unpack:\n\n\n$ tar -zxvf example_build_hcp.tar.gz                                                          \nexample_build_hcp/                                                                                                   \nexample_build_hcp/p1.fasta\nexample_build_hcp/p2.fasta\nexample_build_hcp/p3.fasta\nexample_build_hcp/p4.fasta\nexample_build_hcp/p5.fasta\nexample_build_hcp/p6.fasta\nexample_build_hcp/p7.fasta\nexample_build_hcp/p8.fasta\nexample_build_hcp/p9.fasta\nexample_build_hcp/p10.fasta\n\n\n\n\nCheck each highly conserved proteins in each files:\n\n\n$ cd  example_build_hcp/\n$ cat p1.fasta \n\naeh\nMARLTKRQKAIREKIDPAQQYPVAEALGLLRELPGAKFTESVEVAVNLGVDPRKSDQIVR\nGSTVLPNGTGKTVRVAVFAQGDAAEAAKEAGADIVGMDDLAEQVKGGNLDFDVVVAAPDA\nMGVVGRLGPILGPRGLMPNPKVGTVTPDVAGAVKNAKAGQVRYRTDKGGIIHCAIGKVDF\nEVEALQQNLQALITDLQKLKPANSKGVYLKKVAVSTTMGPGLAVDLASLET\n\nadk\nMAKLTKKQKAQQGKVDSTKLYPFAEAVALVKEAATAKFDESIDVAVQLGVDAKKSDQVVR\nGAVVLPNGTGKTTRVAVFAQGAKAEEAKAAGADVVGMDDLAAQVKAGDMPFDVVIAAPDA\nMRVVGTLGQILGPRGLMPNPKVGTVTPDVATAVKNAKAGQVQFRVDKAGIVHTTIGRRSF\nADDKLQGNLAALIEALNKAKPATSKGVYLRKVAVSSTMGVGVRVDTQSIAA\n\nacp\nMAHVAKKYKAAAEKVDRTKRYKLDEAMSLVKQTATKKFDETVDASINLGVDPKHADQVVR\nGAVVLPHGMGKTVRLAVFAKGDKAKEAQEAGADIVGAEDLAEKIQGGFMDFDKLIATPDM\nMGVVGRLGKILGPRGLMPNPKVGTVTMDLARAVKEQKAGKVEFRVEKAGIVHVPFGKASF\nDPDKLKANFSAIMEVIYKAKPQTAKGVYVKNVTLSTTMGPGIKVDLAELAAQHA\n\nacn\nMSGDGSSYSAEEGIRELLQSAKAKFRESVDVAIKLSVADSKSGESVRGAVVLPKGLGREV\nRVAVFAKGEHAKHASDAGADVVGDEELIEEIKKGRKLDVDWCIATPDFMPQISAIAKILG\nPRGLMPNPKFGTVTLELAKMVGVIKSGQVKFKSDRYGIVHVKIGDVSFTPEDLLENFNAV\nVVAVQNLKPATIKGSYVRGVFVNSTMGRSFRIAGIG\n\nadg\nMPKHGKKYLEAKKQVDRTKLYDPYEALELVKRLASAKFDETVEVAVRLGVDPRHADQQVR\nGAVVLPHGTGKTRRVLVFARGEKAKEAEAAGADYVGAEDLIARIQGGWLDFDVAIATPDM\nMAMVGRIGRILGPRGLMPNPKTGTVTFDVAQAVAEAKAGRVEYRTDKAGIVHAPIGKVSF\nEVEKLVENLKALVDALVRAKPPAAKGQYLRSITVSSTMGPGVKVNPAKLLAS\n\nacl\nMKRGKKYLEAVKLYDKSVAYTGLEAVELAKKTSVAKFDATVEVAFRLNVDPRKADQNLRG\nAISLPHGTGKTVRVVVIAKPEKAKEALAAGALEAGDVELIDKIGKGWFDFDVMVATPDMM\nAQLGKLGRVLGPKGLMPNPKTGTVTLDVAKAVEEIKAGKIEYRTDKVGNIHAPIGKVSFD\nSNKLHENMLAIYNQLVRIKPATVKGTYIKKIALSTTMGPGIMVEENNIKK\n\nace\nMKRGKKYRAAAQLVDRTKLYSPLEAMRLAKQTNTMRVPATVEVAMRLGVDPRKADQMVRG\nTVNLPHGTGKTPRVLVFATAERAEEARAAGADYVGADELIEQVANGFLDFDAVVATPDLM\nGKVGRLGRILGPRGLMPNPKTGTVTNDVAKAVADIKSGKIEFRVDRQANLHLVIGKTDFT\nEQQLVENYAAALDEVLRLKPPTAKGRYLKKVTISTTMGPGIPVDPNRVRNLLAEETAAA\n\naeq\nMTKHGKKYVEAEKQIPAEPVSPLAAMKLLKEISVANFDETVTGDFRLGIDTRQADQQLRG\nTVSLPNGSGKTVRVAVFAEGAAAQAAEEAGADIVGTDELMQQIQAGEFNFDAAVATPDQM\nGKVGRLGKILGPRGLMPNPKLGTVTNDVAKAIKELKGGRVEYRADRYGIAHVVLGKVSFT\nPEQLAENYGAVYDEILRMKPAAAKGKYVKSITVSGTMTPGVSVDSSVTRAYTESAE\n\naca\nMSKKVSKNVAKARAAVEPRPYTLQDAVPLLQQVKFAKFDETVDLTMRLGVDPRHADQMVR\nGTVVLPHGLGKTKKVAVITTGDRQKEAEAAGAEIVGGEELVEKIQKESWTDFDALIATPD\nMMRSVGRLGKVLGPRGLMPNPKTGTVTNDVAAAVKEIKAGKIEYRTDKTALVHVPVGKLS\nFPAEKLIDNAMTVITSVVRAKPSAAKGKYIKGITLSSTMGPGIPLDGSVADAAAKA\n\naco\nMAKKSKRYSEIAAKVDSTKLYGLREAVDLYKEVATAKFDESLEVHIRLGVDPRHADQQVR\nGTIVLPHGTGITKRVLVLAVGEKVKEAEDAGADIVGGDDLIQKISTGWLDFDAVIATPDM\nMKSVGRLGKILGPRGLMPSAKAGTVTFDVADAIKEIKAGRVEFRVDKTAIIHNMVGKKSF\nEAEKLFENLKVLYRAILKARPASAKGTYVRSFYIAPTMGVGIKIDPVAASKEVAEA\n\n\n\n\nReconstruct phylogenetic tree ues example are by follow command:\n\n\nPhySpeTree build -i example_build_hcp -o build_hcp_tree --hcp\n\n\n\n\nFew seconds reconstruct phylogenetic tree completed and tree file are store in \nbuild_hcp_tree\n directory.\n\n\nNOTE\n:\n\n\n\n\nPrepare how many highly proteins which users decide, we recommend not less than 10 highly conserved proteins.\n\n\nEach protein must have the same organisms.\n\n\n\n\nBuild phylogenetic tree by SSU rRNA\n\n\nUse build command to construct phylogenetic tree by SSU rRNA sequence, users should prepare a FASTA format file\ncontain each species SSU rRNA sequence as \nexample_build_srna\n. In this example contain ten species SSU rRNA sequence.\n\n\nDownload \nexample_build_srna\n and check the organisms names:\n\n\n$ grep '\n' example_build_srna.fasta \n\naca\n\nace\n\nacl\n\nacn\n\naco\n\nacp\n\nadg\n\nadk\n\naeh\n\naeq\n\n\n\n\nReconstruct phylogenetic tree ues example are by follow command:\n\n\nPhySpeTree build -i example_build_srna.fasta -o build_srna_tree --srna\n\n\n\n\nFew seconds reconstruct phylogenetic tree completed and tree file are store in \nbuild_srn_tree\n directory\n\n\nAdvance options\n\n\nUsers enable choice more detail options with PhySpeTree call software, detail advance options input\n\nmust be enclosed in single quotes\n.\n\n\nThe following is an example of using RAxML advanced options:\n\n\n$ PhySpeTree -i organism_example_list.txt --raxml '-f a -m GTRGAMMA  -p 12345 -x 12345 -# 100 -n T1'\n\n\n\n\n--muscle\n\n\nMultiple sequence alignment by muscle. The default multiple sequence alignment software is Muscle.\n\n\n--muscle_p\n\n\nSet Muscle advance parameters. The default is \n-maxiter 100\n. More options about muslce please to see \nMUSCLE Manual\n\n\nThe default option:\n\n\n\n\n\n\n\n\noption\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\n-maxiter\n\n\nmaximum number of iterations to run is set 100.\n\n\n\n\n\n\n\n\n--clustalw\n\n\nMultiple sequence alignment by clustalw2.\n\n\n\n--clustalw_p\n\n\nSet clustalw2 advance parameters. Here use clustalw default parameters. More options about clustalw please to see \nClustalw Help\n.\n\n\n--gblocks\n\n\nSet Gblocks advance parameters. The default is \n-t=p -e=-gb1\n. More options about Gblocks please to see \nGblocks documentation\n.\n\n\nThe default option:\n\n\n\n\n\n\n\n\noption\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\n-t\n\n\nChoice type of sequence. The PhySpeTree default set is protein.\n\n\n\n\n\n\n-e\n\n\nEneric file extensionc. PhySpeTree set default is -gbl1.\n\n\n\n\n\n\n\n\n--ranxml\n\n\nReconstruct phylogenetic tree by RAxML. The default build tree software is RAxML.\n\n\n\n--raxml_p\n\n\nSet reconstruct phylogenetic tree arguments with RAxML. The default is \n-f a -m PROTGAMMAJTTX  -p 12345 -x 12345 -# 100 -n T1\n. More options about RAxMl please to see \nRAxML Manual\n.\n\n\nThe default option:\n\n\n\n\n\n\n\n\noption\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\n-f\n\n\nselect algorithm. The PhySpeTree default set is \na\n, rapid Bootstrap analysis and search for best\u00adscoring ML tree in one program run.\n\n\n\n\n\n\n-m\n\n\nModel of Binary (Morphological), Nucleotide, Multi\u00adState, or Amino Acid Substitution. The PhySpeTree default set is PROTGAMMAJTTX.\n\n\n\n\n\n\n-p\n\n\nSpecify a random number seed for the parsimony inferences. The physep default set is 12345.\n\n\n\n\n\n\n-x\n\n\nSpecify an integer number (random seed) and turn on rapid bootstrapping. The PhySpeTree default set is 12345.\n\n\n\n\n\n\n-N\n\n\nThe same with -# specify the number of alternative runs on distinct starting trees. The PhySpeTree default set is 100.\n\n\n\n\n\n\n\n\n--fasttree\n\n\nReconstruct phylogenetic tree by FastTree.\n\n\n--fasttree_p\n\n\nSet more FastTree advance parameters. More options about clustalw please to see \nFastTree\n.\n\n\ncombine\n\n\nThe \ncombine\n module for the consensus tree construction.\n\n\nIn Linux you can easy combine more tree to a tree file, for example:\n\n\n$ cat tree1.tree tree2.tree \n combineTree.tree\n\n\n\n\n\nUse \ncombine\n in command line like this:\n\n\n$ PhySpeTree -i organism_example_list.txt [options]*\n\n\n\n\nCombine options\n\n\n\n\n\n\n\n\noption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n-h\n\n\nPrint help message and exits.\n\n\n\n\n\n\n-i\n\n\nInput a TXT file contain species names (abbreviated names) are same with KEGG species abbreviation.\n\n\n\n\n\n\n-o\n\n\nA directory contain combine tree file. The default output data name is combineTree.\n\n\n\n\n\n\n\n\nexample\n\n\nUsers can use combine command to combine tree from different method method, in our example combine tree from two way reconstruct\nThe \ntree1.tree\n reconstruct by highly conserved proteins, the \ntree2.tree\n reconstructed by SSU rRNA data, exapmel data\n\nexample_combine_tree.tar.gz\n\n\nDownload \nexample_combine_tree.tar.gz\n and unpack:\n\n\n$ tar -zxvf example_combine_tree.tar.gz \nexample_combine_tree/\nexample_combine_tree/tree2.tree\nexample_combine_tree/tree1.tree\n\n\n\n\nCombine tree1.tree and tree2.tree to a tree file:\n\n\n$ conbine tree1.tree tree2.tree \n combine.tree\n\n\n\n\nCombine tree command as like this:\n\n\nPhySpeTree combine -i combine.tree -o combineTree\n\n\n\n\nIn the combineTree directory contain two files:\n\n\ncombine/\n        RAxML_info.T1\n        RAxML_MajorityRuleConsensusTree.T1\n\n\n\n\n\n\nRAxML_info.T1: The info of RAxML\n\n\nRAxML_MajorityRuleConsensusTree.T1: The combine tree by Majority Rule method.\n\n\n\n\niview\n\n\nPhySpeTree provide annotating tree by iTol use iview module. Users can use iview command to color tree range by kingdom, phylum, class or order.\nthe range annotated files can used in \niTol\n, iTol is a very popular online tool for the display, \nannotation and management of phylogenetic trees. More detail with of iTol in \niTol help\n \n\n\nUse \niview\n in command line like this:\n\n\n$ PhySpeTree iview -i organism_example_list.txt -range phylum\n\n\n\n\niview options\n\n\n\n\n\n\n\n\noption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n-h\n\n\nPrint help message and exits.\n\n\n\n\n\n\n-i\n\n\nInput a TXT file contain species names (abbreviated names) are same with KEGG species abbreviation.\n\n\n\n\n\n\n-o\n\n\nA directory contain range text file. The directory name is iview.\n\n\n\n\n\n\n-a\n\n\nColored ranges by users assign, users can choice from \n, \n, \n and \n.\n\n\n\n\n\n\n-r/--range\n\n\nAnnotating ranges by kingdom, phylum, class or order. The default is phylum.\n\n\n\n\n\n\n-l/--labels\n\n\nChange species labels from abbreviated names to full names.\n\n\n\n\n\n\n\n\nexample\n\n\niview Annotating tree by kingdom, phylum, class or order example, download example \norganism_example_list.txt\n\n\nAnnotating tree by kingdom\n\n\n$ PhySpeTree iview -i organism_example_list.txt --range kingdom\nColor range by kingdom was complete.\n\n\n\n\nThe color range type data are store in iview directory:\n\n\n$ cd iview\n$ cat range_color_by_kingdom.txt \nTREE_COLORS\nSEPARATOR TAB\nDATA\naca     range   #BEBF5A Prokaryotes\nace     range   #BEBF5A Prokaryotes\nacl     range   #BEBF5A Prokaryotes\nacn     range   #BEBF5A Prokaryotes\naco     range   #BEBF5A Prokaryotes\nacp     range   #BEBF5A Prokaryotes\nadg     range   #BEBF5A Prokaryotes\nadk     range   #BEBF5A Prokaryotes\naeh     range   #BEBF5A Prokaryotes\naeq     range   #BEBF5A Prokaryotes\n\n\n\n\nAnnotating tree by phylum\n\n\n$ PhySpeTree iview -i organism_example_list.txt --range phylum\nColor range by phylum was complete.\n\n\n\n\nThe color range type data are store in iview directory:\n\n\n$ cd iview\n$ cat range_color_by_phylum.txt \nTREE_COLORS\nSEPARATOR TAB\nDATA\naca     range   #865142 Bacteria\nace     range   #865142 Bacteria\nacl     range   #865142 Bacteria\nacn     range   #865142 Bacteria\naco     range   #865142 Bacteria\nacp     range   #865142 Bacteria\nadg     range   #865142 Bacteria\nadk     range   #865142 Bacteria\naeh     range   #865142 Bacteria\naeq     range   #865142 Bacteria\n\n\n\n\nAnnotating tree by class\n\n\n$ PhySpeTree iview -i organism_example_list.txt --range class\nColor range by class was complete.\n\n\n\n\nThe color range type data are store in iview directory:\n\n\n$ cd iview\n$ cat range_color_by_class.txt \nTREE_COLORS\nSEPARATOR TAB\nDATA\naca     range   #9AB7F3 Acidobacteria\nace     range   #99D1DB Actinobacteria\nacl     range   #A5E58D Tenericutes\nacn     range   #94F1C1 Alphaproteobacteria\naco     range   #D67A21 Synergistetes\nacp     range   #DD9284 Deltaproteobacteria\nadg     range   #3E70B8 Firmicutes - Clostridia\nadk     range   #DDC8B7 Betaproteobacteria\naeh     range   #72E137 Gammaproteobacteria - Others\naeq     range   #99D1DB Actinobacteria\n\n\n\n\nAnnotating tree by order\n\n\n$ PhySpeTree iview -i organism_example_list.txt --range order\nColor range by order was complete.\n\n\n\n\nThe color range type data are store in iview directory:\n\n\n$ cd iview\n$ cat range_color_by_order.txt \nTREE_COLORS\nSEPARATOR TAB\nDATA\naca     range   #AA8761 Acidobacterium\nace     range   #8770BC Acidothermus\nacl     range   #3BD26B Acholeplasma\nacn     range   #D1B487 Anaplasma\naco     range   #D96D21 Aminobacterium\nacp     range   #AC4E16 Anaeromyxobacter\nadg     range   #287AD8 Ammonifex\nadk     range   #C8184E Alicycliphilus\naeh     range   #57A569 Alkalilimnicola\naeq     range   #F1A2B7 Adlercreutzia\n\n\n\n\ncheck\n\n\nThe check module can check input organisms match in KEGG database or SSU rRNA database.\n\n\n$ PhySpeTree check -i organism_example_list.txt -out check --ehcp\n\n\n\n\ncheck options\n\n\n\n\n\n\n\n\noption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n-h\n\n\nPrint help message and exits.\n\n\n\n\n\n\n-i\n\n\nInput a TXT file contain species names (abbreviated names) are same with KEGG species abbreviation.\n\n\n\n\n\n\n-o\n\n\nA directory contain check result. The directory name is check.\n\n\n\n\n\n\n--hcp\n\n\nCheck organisms whether supported by KEGG database.\n\n\n\n\n\n\n--ehcp\n\n\nCheck input organisms prepare for extend autobuild tree module.\n\n\n\n\n\n\n--srna\n\n\nCheck organisms whether supported by SILVA database.\n\n\n\n\n\n\n\n\nexample\n\n\ncheck organism for extend autobuild\n\n\nWhen users use autobuild to reconstruct phylogenetic tree with \n--ehcp\n method, you should prepare highly conserved proteins as extend proteins\nfor auto build tree. You can determine what proteins to be prepared by the check command. Download example for check \norganism_example_list.txt\n\n\nUse check command like follow: \n\n\n$ PhySpeTree check -i organism_example_list.txt --ehcp\n\n'Ribosomal protein L1' ----------------------------------\n p1.fasta\n\n'DNA-directed RNA polymerase subunit alpha' ----------------------------------\n p2.fasta\n\n'Leucyl-tRNA synthetase' ----------------------------------\n p3.fasta\n\n'Metal-dependent proteases with chaperone activity' ----------------------------------\n p4.fasta\n\n'Phenylalanine-tRNA synthethase alpha subunit' ----------------------------------\n p5.fasta\n\n'Predicted GTPase probable translation factor' ----------------------------------\n p6.fasta\n\n'Ribosomal protein L11' ----------------------------------\n p7.fasta\n\n'Ribosomal protein L13' ----------------------------------\n p8.fasta\n\n'Ribosomal protein L14' ----------------------------------\n p9.fasta\n\n'Ribosomal protein L22' ----------------------------------\n p10.fasta\n\n'Ribosomal protein L3' ----------------------------------\n p11.fasta\n\n'Ribosomal protein L5' ----------------------------------\n p12.fasta\n\n'Ribosomal protein S11' ----------------------------------\n p13.fasta\n\n'Ribosomal protein S17' ----------------------------------\n p14.fasta\n\n'Ribosomal protein S2' ----------------------------------\n p15.fasta\n\n'Ribosomal protein S3' ----------------------------------\n p16.fasta\n\n'Ribosomal protein S4' ----------------------------------\n p17.fasta\n\n'Ribosomal protein S5' ----------------------------------\n p18.fasta\n\n'Ribosomal protein S7' ----------------------------------\n p19.fasta\n\n'Ribosomal protein S8' ----------------------------------\n p20.fasta\n\n'Ribosomal protein S9' ----------------------------------\n p21.fasta\n\n'Seryl-tRNA synthetase' ----------------------------------\n p22.fasta\n\n'Arginyl-tRNA synthetase' ----------------------------------\n p23.fasta\n\n'DNA-directed RNA polymerase beta subunit' ----------------------------------\n p24.fasta\n\n'Ribosomal protein S13' ----------------------------------\n p25.fasta\n\nCheck extend highly conserved protein is completed.\n\n\n\n\n\nThis check result write to default directory name is \ncheck\n\n\n$ cd check\n$ cat physpe_echp_extend.txt \n'Ribosomal protein L1' ----------------------------------\n p1.fasta\n'DNA-directed RNA polymerase subunit alpha' ----------------------------------\n p2.fasta\n'Leucyl-tRNA synthetase' ----------------------------------\n p3.fasta\n'Metal-dependent proteases with chaperone activity' ----------------------------------\n p4.fasta\n'Phenylalanine-tRNA synthethase alpha subunit' ----------------------------------\n p5.fasta\n'Predicted GTPase probable translation factor' ----------------------------------\n p6.fasta\n'Ribosomal protein L11' ----------------------------------\n p7.fasta\n'Ribosomal protein L13' ----------------------------------\n p8.fasta\n'Ribosomal protein L14' ----------------------------------\n p9.fasta\n'Ribosomal protein L22' ----------------------------------\n p10.fasta\n'Ribosomal protein L3' ----------------------------------\n p11.fasta\n'Ribosomal protein L5' ----------------------------------\n p12.fasta\n'Ribosomal protein S11' ----------------------------------\n p13.fasta\n'Ribosomal protein S17' ----------------------------------\n p14.fasta\n'Ribosomal protein S2' ----------------------------------\n p15.fasta\n'Ribosomal protein S3' ----------------------------------\n p16.fasta\n'Ribosomal protein S4' ----------------------------------\n p17.fasta\n'Ribosomal protein S5' ----------------------------------\n p18.fasta\n'Ribosomal protein S7' ----------------------------------\n p19.fasta\n'Ribosomal protein S8' ----------------------------------\n p20.fasta\n'Ribosomal protein S9' ----------------------------------\n p21.fasta\n'Seryl-tRNA synthetase' ----------------------------------\n p22.fasta\n'Arginyl-tRNA synthetase' ----------------------------------\n p23.fasta\n'DNA-directed RNA polymerase beta subunit' ----------------------------------\n p24.fasta\n'Ribosomal protein S13' ----------------------------------\n p25.fasta\n\n\n\n\nIn \nphyspe_echp_extend.txt\n file you can check the highly conserved protein, which you should prepare for extend hcp method to reconstruct phylogenetic tree.", 
            "title": "Usage"
        }, 
        {
            "location": "/usage/#usage-and-examples", 
            "text": "", 
            "title": "Usage and Examples"
        }, 
        {
            "location": "/usage/#autobuild", 
            "text": "Users should prepare a TXT file contain the species names (abbreviated names), such as  organism_example_list.txt  Use  autobuild  in command line like this:  $ PhySpeTree -i organism_example_list.txt [options]*", 
            "title": "autobuild"
        }, 
        {
            "location": "/usage/#autobuild-options", 
            "text": "option  Description      -h  Print help message and exits.    -i  Input a TXT file contain the species names (abbreviated names) are same with KEGG species abbreviation.    -o  A directory include output data (tree files). The default output data name is Outdata.    -t  Specify the number of processing threads (CPUs) to reconstruct phylogenetic tree. The default is 1.    -e  The extended data should be FASTA format to extend phylogenetic tree by --ehcp or --esrna option.    --hcp  Specify the hcp (highly conserved protein) method to reconstruct phylogenetic tree. The default method is hcp.    --ehcp  The ehcp mode is use highly conserved proteins with extend highly conserved protein (users provide) to reconstruct phylogenetic tree.    --srna  The srna (SSU rRNA) method is use SSU rRNA data to reconstruct phylogenetic tree.    --esrna  The esrna mode is use SSU RNA sequence with extend SSU RNA sequence (users provide) to reconstruct phylogenetic tree.", 
            "title": "Autobuild options"
        }, 
        {
            "location": "/usage/#example", 
            "text": "When use autobuild command to build species tree, users should prepare a organism list with species names (abbreviated names) are same with  KEGG organism list .  List format like follow or download  organism_example_list.txt  $ cat organism_example_list.txt\naca\nace\nacl\nacn\naco\nacp\nadg\nadk\naeh\naeq", 
            "title": "example"
        }, 
        {
            "location": "/usage/#auto-build-phylogenetic-tree-by-highly-conserved-proteins-method", 
            "text": "$ PhySpeTree autobuild -i organism_example_list.txt --hcp\nLoading organisms names success.....\n\nThe result are store in:Outdata\n\nnow loading data and constructing species phylogenetic tree......\nNow loading data and constructing species phylogenetic tree......\n2016-08-18 15:32:06,770 kegg DB INFO: Read organisms names successful\n2016-08-18 15:32:08,380 kegg DB INFO: Retrieve highly conserved protein 'Ribosomal protein L1' success and store in p1.fasta file\n2016-08-18 15:32:09,702 kegg DB INFO: Retrieve highly conserved protein 'DNA-directed RNA polymerase subunit alpha' success and store in p2.fasta file\n2016-08-18 15:32:11,352 kegg DB INFO: Retrieve highly conserved protein 'Leucyl-tRNA synthetase' success and store in p3.fasta file\n2016-08-18 15:32:12,786 kegg DB INFO: Retrieve highly conserved protein 'Metal-dependent proteases with chaperone activity' success and store in p4.fasta file\n2016-08-18 15:32:14,318 kegg DB INFO: Retrieve highly conserved protein 'Phenylalanine-tRNA synthethase alpha subunit' success and store in p5.fasta file\n2016-08-18 15:32:15,854 kegg DB INFO: Retrieve highly conserved protein 'Predicted GTPase probable translation factor' success and store in p6.fasta file\n2016-08-18 15:32:17,049 kegg DB INFO: Retrieve highly conserved protein 'Ribosomal protein L11' success and store in p7.fasta file\n2016-08-18 15:32:18,316 kegg DB INFO: Retrieve highly conserved protein 'Ribosomal protein L13' success and store in p8.fasta file  When auto build phylogenetic tree by  hcp  method was completed, you will get files layout like this:  log.log\nOutdata/\n        RAxML_bestTree.T1\n        RAxML_bipartitions.T1\n        RAxML_bipartitionsBranchLabels.T1\n        RAxML_bootstrap.T1\n        RAxML_info.T1\n   temp/\n        conserved_protein20160817210902/\n                                       \u3000p1.fasta\n                                       \u3000p2.fasta\n                                       \u3000p3.fasta\n                                       \u3000......\n        hcp_alignment20160817210936/\n                                    p1.fasta\n                                    p2.fasta\n                                    p2.fasta\n                                    ......\n        concatenate20160817210938/\n                                  concatenate.fasta\n                                  concatenate.fasta-gb1\n                                  concatenate.fasta-gb1.htm\n                                  concatenate.fasta-gb1.phy   log.log: The log information of PhySpeTree.   Outdata: Contain phylogenetic tree output result.    RAxML_bestTree.T1: Reconstruct phylogenetic tree by RAxML, it's best ML search tree.   RAxML_bipartitions.T1: Bipartition tree by RAxML.  RAxML_bipartitionsBranchLabels.T1: Bipartition tree by constructed by RAxML with branch length lables.  RAxML_bootstrap.T1: Bootstrap result by RAxML  RAxML_info.T1: The info of run RAxMl.     temp: The temp data by PhySpeTree,  it's very important for users to check the key steps .   conserved_protein: Contain highly conserved proteins retrieve form KEGG database.  hcp_alignment: Contain highly conserved proteins do multiple sequence alignment by muscle.   concatenate: Contain the concatenate highly conserved proteins result and select conserved blocks data.   concatenate.fasta: Concatenate highly conserved proteins result.  concatenate.fasta-gb1: Select conserved blocks result (by Gblocks).  concatenate.fasta-gb1.htm: Select conserved blocks result view by html format.  concatenate.fasta-gb1.phy: Convert FASTA format to PHYLIP format", 
            "title": "Auto build phylogenetic tree by highly conserved proteins method:"
        }, 
        {
            "location": "/usage/#auto-build-phylogenetic-tree-by-ssu-rrna-method", 
            "text": "$ PhySpeTree autobuild -i organism_example_list.txt --srna\nLoading organisms names success.....\n\nThe result are store in:Outdata\n\nNow loading data and constructing species phylogenetic tree......\n2016-08-18 15:29:31,528 16s DB INFO: Read organisms names success\n2016-08-18 15:29:38,166 16s DB INFO: Retrieve organism 'aca' 16s SSU RNA sequences data success\n2016-08-18 15:29:40,236 16s DB INFO: Retrieve organism 'ace' 16s SSU RNA sequences data success\n2016-08-18 15:29:42,356 16s DB INFO: Retrieve organism 'acl' 16s SSU RNA sequences data success\n2016-08-18 15:29:44,615 16s DB INFO: Retrieve organism 'acn' 16s SSU RNA sequences data success\n2016-08-18 15:29:46,868 16s DB INFO: Retrieve organism 'aco' 16s SSU RNA sequences data success\n2016-08-18 15:29:49,119 16s DB INFO: Retrieve organism 'acp' 16s SSU RNA sequences data success\n2016-08-18 15:29:51,392 16s DB INFO: Retrieve organism 'adg' 16s SSU RNA sequences data success  When auto build phylogenetic tree by  srna  method was completed, you will get files layout like this:  log.log\nOutdata/\n        RAxML_bestTree.T1\n        RAxML_bipartitions.T1\n        RAxML_bipartitionsBranchLabels.T1\n        RAxML_bootstrap.T1\n        RAxML_info.T1\n   temp/\n        16srnadata20160818145209/\n                                 16srandata.fasta\n\n        16srna_alignment20160818145236/\n                                  16srandata.fasta\n                                  16srandata.fasta-gb1\n                                  16srandata.fasta-gb1.htm\n                                  16srandata.fasta-gb1.phy   log.log: The log information of PhySpeTree.   Outdata: Contain phylogenetic tree output result.    RAxML_bestTree.T1: Reconstruct phylogenetic tree by RAxML, it's best ML search tree.   RAxML_bipartitions.T1: Bipartition tree by RAxML.  RAxML_bipartitionsBranchLabels.T1: Bipartition tree by constructed by RAxML with branch length lables.  RAxML_bootstrap.T1: Bootstrap result by RAxML  RAxML_info.T1: The info of run RAxMl.     temp: The temp data by PhySpeTree,  it's very important to users to check the key steps .    16srnadata: Contain SSU rRNA data retrieved form SILVA database.   16srnadata.fasta: FASTA format data contain input organism SSU rRNA data.     16srna_alignment: Contain the concatenate highly conserved proteins result and select conserved blocks data.   16srandata.fasta: Contain SSU rRNA data with multiple sequence alignment already.  16srandata.fasta-gb1: Select conserved blocks result (by Gblocks).  16srandata.fasta-gb1.htm: Select conserved blocks result view by html format.  16srandata.fasta-gb1.phy: Convert FASTA format to PHYLIP format", 
            "title": "Auto build phylogenetic tree by SSU rRNA method:"
        }, 
        {
            "location": "/usage/#advance-options", 
            "text": "Users enable choice more detail options with PhySpeTree call software, detail advance options input must be enclosed in single quotes .  The following is an example of using RAxML advanced options:  $ PhySpeTree -i organism_example_list.txt --raxml '-f a -m GTRGAMMA  -p 12345 -x 12345 -# 100 -n T1'  --muscle  Multiple sequence alignment by muscle. The default multiple sequence alignment software is Muscle.  --muscle_p  Set Muscle advance parameters. The default is  -maxiter 100 . More options about muslce please to see  MUSCLE Manual  The default option:     option  description      -maxiter  maximum number of iterations to run is set 100.     --clustalw  Multiple sequence alignment by clustalw2.  --clustalw_p  Set clustalw2 advance parameters. Here use clustalw default parameters. More options about clustalw please to see  Clustalw Help .  --gblocks  Set Gblocks advance parameters. The default is  -t=p -e=-gb1 . More options about Gblocks please to see  Gblocks documentation .  The default option:     option  description      -t  Choice type of sequence. The PhySpeTree default set is protein.    -e  Eneric file extensionc. PhySpeTree set default is -gbl1.     --ranxml  Reconstruct phylogenetic tree by RAxML. The default build tree software is RAxML.  --raxml_p  Set reconstruct phylogenetic tree arguments with RAxML. The default is  -f a -m PROTGAMMAJTTX  -p 12345 -x 12345 -# 100 -n T1 . More options about RAxMl please to see  RAxML Manual .  The default option:     option  description      -f  select algorithm. The PhySpeTree default set is  a , rapid Bootstrap analysis and search for best\u00adscoring ML tree in one program run.    -m  Model of Binary (Morphological), Nucleotide, Multi\u00adState, or Amino Acid Substitution. The PhySpeTree default set is PROTGAMMAJTTX.    -p  Specify a random number seed for the parsimony inferences. The physep default set is 12345.    -x  Specify an integer number (random seed) and turn on rapid bootstrapping. The PhySpeTree default set is 12345.    -N  The same with -# specify the number of alternative runs on distinct starting trees. The PhySpeTree default set is 100.     --fasttree  Reconstruct phylogenetic tree by FastTree.  --fasttree_p  Set more FastTree advance parameters. More options about clustalw please to see  FastTree .", 
            "title": "Advance options"
        }, 
        {
            "location": "/usage/#build", 
            "text": "Users can reconstruct phylogenetic tree use  build  module by manually prepared files. such as, SSU rRNA sequence or highly conserved proteins.  Use  build  module in command line to reconstruct phylogenetic tree:   build phylogenetic tree by highly conserved proteins method:   $ PhySpeTree build -i example_hcp -o output --hcp   build phylogenetic tree by SSU rRNA sequence method:   $ PhySpeTree build -i example_16s_ssurna.fasta -o output --sran", 
            "title": "build"
        }, 
        {
            "location": "/usage/#build-options", 
            "text": "option  Description      -h  Print help message and exits.    -i  Input a TXT file contain the species names (abbreviated names) are same with KEGG species abbreviation.    -o  A directory include output data (tree files). The default output data name is Outdata.    -t  Specify the number of processing threads (CPUs) to reconstruct phylogenetic tree. The default is 1.    -e  The extended data should be FASTA format to extend phylogenetic tree by --ehcp or --esrna option.    --hcp  Specify the hcp (highly conserved protein) method to reconstruct phylogenetic tree. The default method is hcp.    --srna  The srna (SSU rRNA) method is use SSU rRNA data to reconstruct phylogenetic tree.", 
            "title": "build options"
        }, 
        {
            "location": "/usage/#example_1", 
            "text": "", 
            "title": "example"
        }, 
        {
            "location": "/usage/#build-phylogenetic-tree-by-highly-conserved-proteins", 
            "text": "When use build to reconstruct phylogenetic tree, you should prepare a directory contain highly conserved proteins such as  example_build_hcp . In this example\ncontain ten highly conserved proteins p1~p10, in each highly conserved proteins contain 10 organism.  Download  example_build_hcp  you can use the tar command to unpack:  $ tar -zxvf example_build_hcp.tar.gz                                                          \nexample_build_hcp/                                                                                                   \nexample_build_hcp/p1.fasta\nexample_build_hcp/p2.fasta\nexample_build_hcp/p3.fasta\nexample_build_hcp/p4.fasta\nexample_build_hcp/p5.fasta\nexample_build_hcp/p6.fasta\nexample_build_hcp/p7.fasta\nexample_build_hcp/p8.fasta\nexample_build_hcp/p9.fasta\nexample_build_hcp/p10.fasta  Check each highly conserved proteins in each files:  $ cd  example_build_hcp/\n$ cat p1.fasta  aeh\nMARLTKRQKAIREKIDPAQQYPVAEALGLLRELPGAKFTESVEVAVNLGVDPRKSDQIVR\nGSTVLPNGTGKTVRVAVFAQGDAAEAAKEAGADIVGMDDLAEQVKGGNLDFDVVVAAPDA\nMGVVGRLGPILGPRGLMPNPKVGTVTPDVAGAVKNAKAGQVRYRTDKGGIIHCAIGKVDF\nEVEALQQNLQALITDLQKLKPANSKGVYLKKVAVSTTMGPGLAVDLASLET adk\nMAKLTKKQKAQQGKVDSTKLYPFAEAVALVKEAATAKFDESIDVAVQLGVDAKKSDQVVR\nGAVVLPNGTGKTTRVAVFAQGAKAEEAKAAGADVVGMDDLAAQVKAGDMPFDVVIAAPDA\nMRVVGTLGQILGPRGLMPNPKVGTVTPDVATAVKNAKAGQVQFRVDKAGIVHTTIGRRSF\nADDKLQGNLAALIEALNKAKPATSKGVYLRKVAVSSTMGVGVRVDTQSIAA acp\nMAHVAKKYKAAAEKVDRTKRYKLDEAMSLVKQTATKKFDETVDASINLGVDPKHADQVVR\nGAVVLPHGMGKTVRLAVFAKGDKAKEAQEAGADIVGAEDLAEKIQGGFMDFDKLIATPDM\nMGVVGRLGKILGPRGLMPNPKVGTVTMDLARAVKEQKAGKVEFRVEKAGIVHVPFGKASF\nDPDKLKANFSAIMEVIYKAKPQTAKGVYVKNVTLSTTMGPGIKVDLAELAAQHA acn\nMSGDGSSYSAEEGIRELLQSAKAKFRESVDVAIKLSVADSKSGESVRGAVVLPKGLGREV\nRVAVFAKGEHAKHASDAGADVVGDEELIEEIKKGRKLDVDWCIATPDFMPQISAIAKILG\nPRGLMPNPKFGTVTLELAKMVGVIKSGQVKFKSDRYGIVHVKIGDVSFTPEDLLENFNAV\nVVAVQNLKPATIKGSYVRGVFVNSTMGRSFRIAGIG adg\nMPKHGKKYLEAKKQVDRTKLYDPYEALELVKRLASAKFDETVEVAVRLGVDPRHADQQVR\nGAVVLPHGTGKTRRVLVFARGEKAKEAEAAGADYVGAEDLIARIQGGWLDFDVAIATPDM\nMAMVGRIGRILGPRGLMPNPKTGTVTFDVAQAVAEAKAGRVEYRTDKAGIVHAPIGKVSF\nEVEKLVENLKALVDALVRAKPPAAKGQYLRSITVSSTMGPGVKVNPAKLLAS acl\nMKRGKKYLEAVKLYDKSVAYTGLEAVELAKKTSVAKFDATVEVAFRLNVDPRKADQNLRG\nAISLPHGTGKTVRVVVIAKPEKAKEALAAGALEAGDVELIDKIGKGWFDFDVMVATPDMM\nAQLGKLGRVLGPKGLMPNPKTGTVTLDVAKAVEEIKAGKIEYRTDKVGNIHAPIGKVSFD\nSNKLHENMLAIYNQLVRIKPATVKGTYIKKIALSTTMGPGIMVEENNIKK ace\nMKRGKKYRAAAQLVDRTKLYSPLEAMRLAKQTNTMRVPATVEVAMRLGVDPRKADQMVRG\nTVNLPHGTGKTPRVLVFATAERAEEARAAGADYVGADELIEQVANGFLDFDAVVATPDLM\nGKVGRLGRILGPRGLMPNPKTGTVTNDVAKAVADIKSGKIEFRVDRQANLHLVIGKTDFT\nEQQLVENYAAALDEVLRLKPPTAKGRYLKKVTISTTMGPGIPVDPNRVRNLLAEETAAA aeq\nMTKHGKKYVEAEKQIPAEPVSPLAAMKLLKEISVANFDETVTGDFRLGIDTRQADQQLRG\nTVSLPNGSGKTVRVAVFAEGAAAQAAEEAGADIVGTDELMQQIQAGEFNFDAAVATPDQM\nGKVGRLGKILGPRGLMPNPKLGTVTNDVAKAIKELKGGRVEYRADRYGIAHVVLGKVSFT\nPEQLAENYGAVYDEILRMKPAAAKGKYVKSITVSGTMTPGVSVDSSVTRAYTESAE aca\nMSKKVSKNVAKARAAVEPRPYTLQDAVPLLQQVKFAKFDETVDLTMRLGVDPRHADQMVR\nGTVVLPHGLGKTKKVAVITTGDRQKEAEAAGAEIVGGEELVEKIQKESWTDFDALIATPD\nMMRSVGRLGKVLGPRGLMPNPKTGTVTNDVAAAVKEIKAGKIEYRTDKTALVHVPVGKLS\nFPAEKLIDNAMTVITSVVRAKPSAAKGKYIKGITLSSTMGPGIPLDGSVADAAAKA aco\nMAKKSKRYSEIAAKVDSTKLYGLREAVDLYKEVATAKFDESLEVHIRLGVDPRHADQQVR\nGTIVLPHGTGITKRVLVLAVGEKVKEAEDAGADIVGGDDLIQKISTGWLDFDAVIATPDM\nMKSVGRLGKILGPRGLMPSAKAGTVTFDVADAIKEIKAGRVEFRVDKTAIIHNMVGKKSF\nEAEKLFENLKVLYRAILKARPASAKGTYVRSFYIAPTMGVGIKIDPVAASKEVAEA  Reconstruct phylogenetic tree ues example are by follow command:  PhySpeTree build -i example_build_hcp -o build_hcp_tree --hcp  Few seconds reconstruct phylogenetic tree completed and tree file are store in  build_hcp_tree  directory.  NOTE :   Prepare how many highly proteins which users decide, we recommend not less than 10 highly conserved proteins.  Each protein must have the same organisms.", 
            "title": "Build phylogenetic tree by highly conserved proteins"
        }, 
        {
            "location": "/usage/#build-phylogenetic-tree-by-ssu-rrna", 
            "text": "Use build command to construct phylogenetic tree by SSU rRNA sequence, users should prepare a FASTA format file\ncontain each species SSU rRNA sequence as  example_build_srna . In this example contain ten species SSU rRNA sequence.  Download  example_build_srna  and check the organisms names:  $ grep ' ' example_build_srna.fasta  aca ace acl acn aco acp adg adk aeh aeq  Reconstruct phylogenetic tree ues example are by follow command:  PhySpeTree build -i example_build_srna.fasta -o build_srna_tree --srna  Few seconds reconstruct phylogenetic tree completed and tree file are store in  build_srn_tree  directory", 
            "title": "Build phylogenetic tree by SSU rRNA"
        }, 
        {
            "location": "/usage/#advance-options_1", 
            "text": "Users enable choice more detail options with PhySpeTree call software, detail advance options input must be enclosed in single quotes .  The following is an example of using RAxML advanced options:  $ PhySpeTree -i organism_example_list.txt --raxml '-f a -m GTRGAMMA  -p 12345 -x 12345 -# 100 -n T1'  --muscle  Multiple sequence alignment by muscle. The default multiple sequence alignment software is Muscle.  --muscle_p  Set Muscle advance parameters. The default is  -maxiter 100 . More options about muslce please to see  MUSCLE Manual  The default option:     option  description      -maxiter  maximum number of iterations to run is set 100.     --clustalw  Multiple sequence alignment by clustalw2.  --clustalw_p  Set clustalw2 advance parameters. Here use clustalw default parameters. More options about clustalw please to see  Clustalw Help .  --gblocks  Set Gblocks advance parameters. The default is  -t=p -e=-gb1 . More options about Gblocks please to see  Gblocks documentation .  The default option:     option  description      -t  Choice type of sequence. The PhySpeTree default set is protein.    -e  Eneric file extensionc. PhySpeTree set default is -gbl1.     --ranxml  Reconstruct phylogenetic tree by RAxML. The default build tree software is RAxML.  --raxml_p  Set reconstruct phylogenetic tree arguments with RAxML. The default is  -f a -m PROTGAMMAJTTX  -p 12345 -x 12345 -# 100 -n T1 . More options about RAxMl please to see  RAxML Manual .  The default option:     option  description      -f  select algorithm. The PhySpeTree default set is  a , rapid Bootstrap analysis and search for best\u00adscoring ML tree in one program run.    -m  Model of Binary (Morphological), Nucleotide, Multi\u00adState, or Amino Acid Substitution. The PhySpeTree default set is PROTGAMMAJTTX.    -p  Specify a random number seed for the parsimony inferences. The physep default set is 12345.    -x  Specify an integer number (random seed) and turn on rapid bootstrapping. The PhySpeTree default set is 12345.    -N  The same with -# specify the number of alternative runs on distinct starting trees. The PhySpeTree default set is 100.     --fasttree  Reconstruct phylogenetic tree by FastTree.  --fasttree_p  Set more FastTree advance parameters. More options about clustalw please to see  FastTree .", 
            "title": "Advance options"
        }, 
        {
            "location": "/usage/#combine", 
            "text": "The  combine  module for the consensus tree construction.  In Linux you can easy combine more tree to a tree file, for example:  $ cat tree1.tree tree2.tree   combineTree.tree  Use  combine  in command line like this:  $ PhySpeTree -i organism_example_list.txt [options]*", 
            "title": "combine"
        }, 
        {
            "location": "/usage/#combine-options", 
            "text": "option  Description      -h  Print help message and exits.    -i  Input a TXT file contain species names (abbreviated names) are same with KEGG species abbreviation.    -o  A directory contain combine tree file. The default output data name is combineTree.", 
            "title": "Combine options"
        }, 
        {
            "location": "/usage/#example_2", 
            "text": "Users can use combine command to combine tree from different method method, in our example combine tree from two way reconstruct\nThe  tree1.tree  reconstruct by highly conserved proteins, the  tree2.tree  reconstructed by SSU rRNA data, exapmel data example_combine_tree.tar.gz  Download  example_combine_tree.tar.gz  and unpack:  $ tar -zxvf example_combine_tree.tar.gz \nexample_combine_tree/\nexample_combine_tree/tree2.tree\nexample_combine_tree/tree1.tree  Combine tree1.tree and tree2.tree to a tree file:  $ conbine tree1.tree tree2.tree   combine.tree  Combine tree command as like this:  PhySpeTree combine -i combine.tree -o combineTree  In the combineTree directory contain two files:  combine/\n        RAxML_info.T1\n        RAxML_MajorityRuleConsensusTree.T1   RAxML_info.T1: The info of RAxML  RAxML_MajorityRuleConsensusTree.T1: The combine tree by Majority Rule method.", 
            "title": "example"
        }, 
        {
            "location": "/usage/#iview", 
            "text": "PhySpeTree provide annotating tree by iTol use iview module. Users can use iview command to color tree range by kingdom, phylum, class or order.\nthe range annotated files can used in  iTol , iTol is a very popular online tool for the display, \nannotation and management of phylogenetic trees. More detail with of iTol in  iTol help    Use  iview  in command line like this:  $ PhySpeTree iview -i organism_example_list.txt -range phylum", 
            "title": "iview"
        }, 
        {
            "location": "/usage/#iview-options", 
            "text": "option  Description      -h  Print help message and exits.    -i  Input a TXT file contain species names (abbreviated names) are same with KEGG species abbreviation.    -o  A directory contain range text file. The directory name is iview.    -a  Colored ranges by users assign, users can choice from  ,  ,   and  .    -r/--range  Annotating ranges by kingdom, phylum, class or order. The default is phylum.    -l/--labels  Change species labels from abbreviated names to full names.", 
            "title": "iview options"
        }, 
        {
            "location": "/usage/#example_3", 
            "text": "iview Annotating tree by kingdom, phylum, class or order example, download example  organism_example_list.txt", 
            "title": "example"
        }, 
        {
            "location": "/usage/#annotating-tree-by-kingdom", 
            "text": "$ PhySpeTree iview -i organism_example_list.txt --range kingdom\nColor range by kingdom was complete.  The color range type data are store in iview directory:  $ cd iview\n$ cat range_color_by_kingdom.txt \nTREE_COLORS\nSEPARATOR TAB\nDATA\naca     range   #BEBF5A Prokaryotes\nace     range   #BEBF5A Prokaryotes\nacl     range   #BEBF5A Prokaryotes\nacn     range   #BEBF5A Prokaryotes\naco     range   #BEBF5A Prokaryotes\nacp     range   #BEBF5A Prokaryotes\nadg     range   #BEBF5A Prokaryotes\nadk     range   #BEBF5A Prokaryotes\naeh     range   #BEBF5A Prokaryotes\naeq     range   #BEBF5A Prokaryotes", 
            "title": "Annotating tree by kingdom"
        }, 
        {
            "location": "/usage/#annotating-tree-by-phylum", 
            "text": "$ PhySpeTree iview -i organism_example_list.txt --range phylum\nColor range by phylum was complete.  The color range type data are store in iview directory:  $ cd iview\n$ cat range_color_by_phylum.txt \nTREE_COLORS\nSEPARATOR TAB\nDATA\naca     range   #865142 Bacteria\nace     range   #865142 Bacteria\nacl     range   #865142 Bacteria\nacn     range   #865142 Bacteria\naco     range   #865142 Bacteria\nacp     range   #865142 Bacteria\nadg     range   #865142 Bacteria\nadk     range   #865142 Bacteria\naeh     range   #865142 Bacteria\naeq     range   #865142 Bacteria", 
            "title": "Annotating tree by phylum"
        }, 
        {
            "location": "/usage/#annotating-tree-by-class", 
            "text": "$ PhySpeTree iview -i organism_example_list.txt --range class\nColor range by class was complete.  The color range type data are store in iview directory:  $ cd iview\n$ cat range_color_by_class.txt \nTREE_COLORS\nSEPARATOR TAB\nDATA\naca     range   #9AB7F3 Acidobacteria\nace     range   #99D1DB Actinobacteria\nacl     range   #A5E58D Tenericutes\nacn     range   #94F1C1 Alphaproteobacteria\naco     range   #D67A21 Synergistetes\nacp     range   #DD9284 Deltaproteobacteria\nadg     range   #3E70B8 Firmicutes - Clostridia\nadk     range   #DDC8B7 Betaproteobacteria\naeh     range   #72E137 Gammaproteobacteria - Others\naeq     range   #99D1DB Actinobacteria", 
            "title": "Annotating tree by class"
        }, 
        {
            "location": "/usage/#annotating-tree-by-order", 
            "text": "$ PhySpeTree iview -i organism_example_list.txt --range order\nColor range by order was complete.  The color range type data are store in iview directory:  $ cd iview\n$ cat range_color_by_order.txt \nTREE_COLORS\nSEPARATOR TAB\nDATA\naca     range   #AA8761 Acidobacterium\nace     range   #8770BC Acidothermus\nacl     range   #3BD26B Acholeplasma\nacn     range   #D1B487 Anaplasma\naco     range   #D96D21 Aminobacterium\nacp     range   #AC4E16 Anaeromyxobacter\nadg     range   #287AD8 Ammonifex\nadk     range   #C8184E Alicycliphilus\naeh     range   #57A569 Alkalilimnicola\naeq     range   #F1A2B7 Adlercreutzia", 
            "title": "Annotating tree by order"
        }, 
        {
            "location": "/usage/#check", 
            "text": "The check module can check input organisms match in KEGG database or SSU rRNA database.  $ PhySpeTree check -i organism_example_list.txt -out check --ehcp", 
            "title": "check"
        }, 
        {
            "location": "/usage/#check-options", 
            "text": "option  Description      -h  Print help message and exits.    -i  Input a TXT file contain species names (abbreviated names) are same with KEGG species abbreviation.    -o  A directory contain check result. The directory name is check.    --hcp  Check organisms whether supported by KEGG database.    --ehcp  Check input organisms prepare for extend autobuild tree module.    --srna  Check organisms whether supported by SILVA database.", 
            "title": "check options"
        }, 
        {
            "location": "/usage/#example_4", 
            "text": "", 
            "title": "example"
        }, 
        {
            "location": "/usage/#check-organism-for-extend-autobuild", 
            "text": "When users use autobuild to reconstruct phylogenetic tree with  --ehcp  method, you should prepare highly conserved proteins as extend proteins\nfor auto build tree. You can determine what proteins to be prepared by the check command. Download example for check  organism_example_list.txt  Use check command like follow:   $ PhySpeTree check -i organism_example_list.txt --ehcp\n\n'Ribosomal protein L1' ----------------------------------  p1.fasta\n\n'DNA-directed RNA polymerase subunit alpha' ----------------------------------  p2.fasta\n\n'Leucyl-tRNA synthetase' ----------------------------------  p3.fasta\n\n'Metal-dependent proteases with chaperone activity' ----------------------------------  p4.fasta\n\n'Phenylalanine-tRNA synthethase alpha subunit' ----------------------------------  p5.fasta\n\n'Predicted GTPase probable translation factor' ----------------------------------  p6.fasta\n\n'Ribosomal protein L11' ----------------------------------  p7.fasta\n\n'Ribosomal protein L13' ----------------------------------  p8.fasta\n\n'Ribosomal protein L14' ----------------------------------  p9.fasta\n\n'Ribosomal protein L22' ----------------------------------  p10.fasta\n\n'Ribosomal protein L3' ----------------------------------  p11.fasta\n\n'Ribosomal protein L5' ----------------------------------  p12.fasta\n\n'Ribosomal protein S11' ----------------------------------  p13.fasta\n\n'Ribosomal protein S17' ----------------------------------  p14.fasta\n\n'Ribosomal protein S2' ----------------------------------  p15.fasta\n\n'Ribosomal protein S3' ----------------------------------  p16.fasta\n\n'Ribosomal protein S4' ----------------------------------  p17.fasta\n\n'Ribosomal protein S5' ----------------------------------  p18.fasta\n\n'Ribosomal protein S7' ----------------------------------  p19.fasta\n\n'Ribosomal protein S8' ----------------------------------  p20.fasta\n\n'Ribosomal protein S9' ----------------------------------  p21.fasta\n\n'Seryl-tRNA synthetase' ----------------------------------  p22.fasta\n\n'Arginyl-tRNA synthetase' ----------------------------------  p23.fasta\n\n'DNA-directed RNA polymerase beta subunit' ----------------------------------  p24.fasta\n\n'Ribosomal protein S13' ----------------------------------  p25.fasta\n\nCheck extend highly conserved protein is completed.  This check result write to default directory name is  check  $ cd check\n$ cat physpe_echp_extend.txt \n'Ribosomal protein L1' ----------------------------------  p1.fasta\n'DNA-directed RNA polymerase subunit alpha' ----------------------------------  p2.fasta\n'Leucyl-tRNA synthetase' ----------------------------------  p3.fasta\n'Metal-dependent proteases with chaperone activity' ----------------------------------  p4.fasta\n'Phenylalanine-tRNA synthethase alpha subunit' ----------------------------------  p5.fasta\n'Predicted GTPase probable translation factor' ----------------------------------  p6.fasta\n'Ribosomal protein L11' ----------------------------------  p7.fasta\n'Ribosomal protein L13' ----------------------------------  p8.fasta\n'Ribosomal protein L14' ----------------------------------  p9.fasta\n'Ribosomal protein L22' ----------------------------------  p10.fasta\n'Ribosomal protein L3' ----------------------------------  p11.fasta\n'Ribosomal protein L5' ----------------------------------  p12.fasta\n'Ribosomal protein S11' ----------------------------------  p13.fasta\n'Ribosomal protein S17' ----------------------------------  p14.fasta\n'Ribosomal protein S2' ----------------------------------  p15.fasta\n'Ribosomal protein S3' ----------------------------------  p16.fasta\n'Ribosomal protein S4' ----------------------------------  p17.fasta\n'Ribosomal protein S5' ----------------------------------  p18.fasta\n'Ribosomal protein S7' ----------------------------------  p19.fasta\n'Ribosomal protein S8' ----------------------------------  p20.fasta\n'Ribosomal protein S9' ----------------------------------  p21.fasta\n'Seryl-tRNA synthetase' ----------------------------------  p22.fasta\n'Arginyl-tRNA synthetase' ----------------------------------  p23.fasta\n'DNA-directed RNA polymerase beta subunit' ----------------------------------  p24.fasta\n'Ribosomal protein S13' ----------------------------------  p25.fasta  In  physpe_echp_extend.txt  file you can check the highly conserved protein, which you should prepare for extend hcp method to reconstruct phylogenetic tree.", 
            "title": "check organism for extend autobuild"
        }, 
        {
            "location": "/tutorial/", 
            "text": "PhySpeTree Tutorial\n\n\nAutomatically reconstruct Tree of Life\n\n\nThe Tree of Life always used to describe the relations between organisms are living and extinct.\nHere we reconstruct tree of life, which contain 190 organisms. We use two method automatically reconstruct phylogenetic tree. One way is use highly\nconserved protein method and another is use SSU rRNA method to reconstruct Tree of Life.\n\n\nAuto build Tree of life by highly conserved protein method\n\n\n\n\nConcept\n\n\n\n\n\n\nIn highly conserved protein (hcp) method automatically build phylogenetic tree by concatenate highly conserved protein to a supermatrix then build tree.\nHere we prepare 31 highly conserved proteins to automatically reconstruct phylogenetic tree. you also can searching what's the \n31 highly protein\n be used.\n\n\n1.Prepare species names list\n\n\nPreparing the organisms names (abbreviated names) are same with \nKEGG organisms\n abbreviation. you can get KEGG organisms abbreviation form \nKEGG API\n. \nHere we reconstructed tree of life use 191 organisms names are \ndownload\n. the organisms names list as follow:\n\n\n$ cat 191speciesnames.txt \nneq\npai\nape\nsto\nssoa\ntvo\ntac\nafu\n.....\n\n\n\n\n2.Reconstruct phylogenetic tree by highly conserved protein method\n\n\nWhen users use PhySpeTree automatically build phylogenetic tree, the users can use \n--hcp\n arguments to specify use highly conserved protein method to build tree. The default use 1 thread \nto reconstruct phylogenetic tree. If you want to use more threads can use \n-t\n parameter to set the threads to be used. Here we used the default value 1 thread to \nbuild 191 species phylogenetic tree.\n\n\n$ PhySpeTree autobuild -i 191speciesnames.txt -o 191_pro --hcp\nLoading organisms names success.....\n\nThe result are store in:191_pro\n\nNow loading data and constructing species phylogenetic tree......\n2016-09-06 13:01:53,462 Checking organisms INFO: The organism: ges\n2016-09-06 13:01:53,462 Checking organisms WARNING: There organisms can't match in KEGG database so removed and reconstruct phylogenetic tree\n2016-09-06 13:01:53,462 kegg DB INFO: Read organisms names success\n2016-09-06 13:02:15,058 kegg DB INFO: Retrieve highly conserved protein 'Ribosomal protein L1' success and store in p1.fasta file\n2016-09-06 13:02:37,771 kegg DB INFO: Retrieve highly conserved protein 'Leucyl-tRNA synthetase' success and store in p2.fasta file\n2016-09-06 13:03:00,211 kegg DB INFO: Retrieve highly conserved protein 'Ribosomal protein L14' success and store in p3.fasta file\n2016-09-06 13:03:20,662 kegg DB INFO: Retrieve highly conserved protein 'Ribosomal protein L5' success and store in p4.fasta file\n2016-09-06 13:03:40,959 kegg DB INFO: Retrieve highly conserved protein 'Ribosomal protein S7' success and store in p5.fasta file\n2016-09-06 13:04:01,849 kegg DB INFO: Retrieve highly conserved protein 'Ribosomal protein S8' success and store in p6.fasta file\n2016-09-06 13:04:24,221 kegg DB INFO: Retrieve highly conserved protein 'Arginyl-tRNA synthetase' success and store in p7.fasta file\n2016-09-06 13:04:24,222 kegg DB INFO: retrieve from Kegg DB 7 highly conserved proteins\n\n\n\n\n\n3.Get the tree file\n\n\n\n\n4.Use iview module annotating tree\n\n\nPhySpeTree provide iview module to annotating tree by iTol, iTol is a very popular online tool for the display, annotation and management of phylogenetic trees.\nWhen you use iview module to annotating tree, only drop the output the generate files to your iTol account to display tree.\n\n\n\n\nChange abbreviated label names to full names use \n--labels\n arguments.\n\n\n\n\n$ PhySpeTree iview -i 191speciesnames.txt --labels\nChange abbreviation names to full names complete\nchange labels file was save in iview/labels.txt\n\n$ cd iview\n\n$ cat labels.txt \nLABELS\nSEPARATOR TAB\nDATA\nneq     Nanoarchaeum equitans\npai     Pyrobaculum aerophilum\nape     Aeropyrum pernix\nsto     Sulfolobus tokodaii\nssoa    Sulfolobus solfataricus SULA\ntvo     Thermoplasma volcanium\ntac     Thermoplasma acidophilum\nafu     Archaeoglobus fulgidus DSM 4304\nhal     Halobacterium sp. NRC-1\nmac     Methanosarcina acetivorans\nmma     Methanosarcina mazei Go1\npfu     Pyrococcus furiosus DSM 3638\npho     Pyrococcus horikoshii\npab     Pyrococcus abyssi\nmth     Methanothermobacter thermautotrophicus\nmka     Methanopyrus kandleri\nmmp     Methanococcus maripaludis S2\n.....\n\n\n\n\n\n\nDrop \nlabels.txt\n to you iTol account and view the phylogenetic tree.\n\n\n\n\n\n\n\n\nColor range by phylum use \n-a\n parameter to specified. The default annotation by phylum.\n\n\n\n\n$ PhySpeTree iview -i 191speciesnames.txt -o iview --range -a phylum\nColor range by phylum was complete.\nColor range annotation was save in iview/range_color_by_phylum.txt\n\n$ cd iview\n\n$ cat range_color_by_phylum.txt \nTREE_COLORS\nSEPARATOR TAB\nDATA\nneq     range   #996433 Archaea\npai     range   #996433 Archaea\nape     range   #996433 Archaea\nsto     range   #996433 Archaea\nssoa    range   #996433 Archaea\ntvo     range   #996433 Archaea\ntac     range   #996433 Archaea\nafu     range   #996433 Archaea\nhal     range   #996433 Archaea\nmac     range   #996433 Archaea\nmma     range   #996433 Archaea\npfu     range   #996433 Archaea\npho     range   #996433 Archaea\npab     range   #996433 Archaea\nmth     range   #996433 Archaea\nmka     range   #996433 Archaea\nmmp     range   #996433 Archaea\nmja     range   #996433 Archaea\n.....\n\n\n\n\n\n\nDrop \nrange_color_by_phylum.txt\n to you iTol account and view the phylogenetic tree.\n\n\n\n\n\n\nAuto build Tree of Life by 16s SSU RNA\n\n\n\n\nConcept\n\n\n\n\n\n\nPhySpeTree provide auto reconstruct phylogenetic tree by 16s SSU RNA, the concept of this way is use alignment organisms 16s SSU RNA and then reconstruct \nphylogenetic tree.\n\n\n1.Prepare organism names list, 191 organisms names list \ndownload\n\n\n$ cat 191speciesnames.txt \nneq\npai\nape\nsto\nssoa\ntvo\ntac\nafu\n.....\n\n\n\n\n2.Reconstruct phylogenetic tree by 16s SSU RNA method\n\n\n$ PhySpeTree autobuild -i 191speciesnames.txt -o 191_rna --srna\nLoading organisms names success.....\n\nThe result are store in:191_rna\n\nNow loading data and constructing species phylogenetic tree......\n2016-09-05 19:48:03,824 Checking organisms INFO: The organism: neq\n2016-09-05 19:48:03,824 Checking organisms INFO: The organism: ape\n2016-09-05 19:48:03,824 Checking organisms INFO: The organism: tac\n2016-09-05 19:48:03,824 Checking organisms INFO: The organism: mmp\n2016-09-05 19:48:03,824 Checking organisms INFO: The organism: gla\n2016-09-05 19:48:03,824 Checking organisms INFO: The organism: tps\n2016-09-05 19:48:03,824 Checking organisms INFO: The organism: cho\n2016-09-05 19:48:03,824 Checking organisms INFO: The organism: ddi\n2016-09-05 19:48:03,824 Checking organisms INFO: The organism: spo\n2016-09-05 19:48:03,824 Checking organisms INFO: The organism: aga\n2016-09-05 19:48:03,824 Checking organisms INFO: The organism: tru\n2016-09-05 19:48:03,824 Checking organisms INFO: The organism: mpu\n2016-09-05 19:48:03,824 Checking organisms INFO: The organism: lin\n2016-09-05 19:48:03,825 Checking organisms INFO: The organism: ban\n2016-09-05 19:48:03,825 Checking organisms INFO: The organism: bce\n2016-09-05 19:48:03,825 Checking organisms INFO: The organism: ljo\n2016-09-05 19:48:03,825 Checking organisms INFO: The organism: san\n2016-09-05 19:48:03,825 Checking organisms INFO: The organism: spg\n2016-09-05 19:48:03,825 Checking organisms INFO: The organism: ges\n2016-09-05 19:48:03,825 Checking organisms INFO: The organism: lis\n2016-09-05 19:48:03,825 Checking organisms INFO: The organism: sco\n2016-09-05 19:48:03,825 Checking organisms INFO: The organism: cdi\n2016-09-05 19:48:03,825 Checking organisms INFO: The organism: mle\n2016-09-05 19:48:03,825 Checking organisms INFO: The organism: wsu\n2016-09-05 19:48:03,825 Checking organisms INFO: The organism: rpr\n2016-09-05 19:48:03,825 Checking organisms INFO: The organism: bpe\n2016-09-05 19:48:03,825 Checking organisms INFO: The organism: bpa\n2016-09-05 19:48:03,825 Checking organisms INFO: The organism: ppr\n2016-09-05 19:48:03,825 Checking organisms WARNING: There organisms can't match in SILVA database so removed and reconstruct phylogenetic tree\n2016-09-05 19:48:03,825 16s DB INFO: Read organisms names success\n2016-09-05 19:48:14,354 16s DB INFO: Retrieve organism 'pai' 16s SSU RNA sequences data success\n2016-09-05 19:48:17,703 16s DB INFO: Retrieve organism 'sto' 16s SSU RNA sequences data success\n2016-09-05 19:48:20,674 16s DB INFO: Retrieve organism 'ssoa' 16s SSU RNA sequences data success\n2016-09-05 19:48:23,031 16s DB INFO: Retrieve organism 'tvo' 16s SSU RNA sequences data success\n2016-09-05 19:48:26,510 16s DB INFO: Retrieve organism 'afu' 16s SSU RNA sequences data success\n2016-09-05 19:48:28,766 16s DB INFO: Retrieve organism 'hal' 16s SSU RNA sequences data success\n2016-09-05 19:48:31,148 16s DB INFO: Retrieve organism 'mac' 16s SSU RNA sequences data success\n2016-09-05 19:48:33,579 16s DB INFO: Retrieve organism 'mma' 16s SSU RNA sequences data success\n2016-09-05 19:48:35,856 16s DB INFO: Retrieve organism 'pfu' 16s SSU RNA sequences data success\n2016-09-05 19:48:38,194 16s DB INFO: Retrieve organism 'pho' 16s SSU RNA sequences data success\n......\n\n\n\n\n3.Get the tree file\n\n\n\n\n4.Use iview annotating tree\n\n\n\n\nChange abbreviated label names to full names use \n--labels\n\n\n\n\n$ PhySpeTree iview -i 191speciesnames.txt --labels\nChange abbreviation names to full names complete\nchange labels file was save in iview/labels.txt\n\n$ cd iview\n\n$ cat labels.txt \nLABELS\nSEPARATOR TAB\nDATA\nneq     Nanoarchaeum equitans\npai     Pyrobaculum aerophilum\nape     Aeropyrum pernix\nsto     Sulfolobus tokodaii\nssoa    Sulfolobus solfataricus SULA\ntvo     Thermoplasma volcanium\ntac     Thermoplasma acidophilum\nafu     Archaeoglobus fulgidus DSM 4304\nhal     Halobacterium sp. NRC-1\nmac     Methanosarcina acetivorans\nmma     Methanosarcina mazei Go1\npfu     Pyrococcus furiosus DSM 3638\npho     Pyrococcus horikoshii\npab     Pyrococcus abyssi\nmth     Methanothermobacter thermautotrophicus\nmka     Methanopyrus kandleri\nmmp     Methanococcus maripaludis S2\n.....\n\n\n\n\n\n\nTree view in iTol\n\n\n\n\n\n\n\n\nColor range by phylum\n\n\n\n\n$ PhySpeTree iview -i 191speciesnames.txt -o iview --range -a phylum\nColor range by phylum was complete.\nColor range annotation was save in iview/range_color_by_phylum.txt\n\n$ cd iview\n\n$ cat range_color_by_phylum.txt \nTREE_COLORS\nSEPARATOR TAB\nDATA\nneq     range   #996433 Archaea\npai     range   #996433 Archaea\nape     range   #996433 Archaea\nsto     range   #996433 Archaea\nssoa    range   #996433 Archaea\ntvo     range   #996433 Archaea\ntac     range   #996433 Archaea\nafu     range   #996433 Archaea\nhal     range   #996433 Archaea\nmac     range   #996433 Archaea\nmma     range   #996433 Archaea\npfu     range   #996433 Archaea\npho     range   #996433 Archaea\npab     range   #996433 Archaea\nmth     range   #996433 Archaea\nmka     range   #996433 Archaea\nmmp     range   #996433 Archaea\nmja     range   #996433 Archaea\n.....\n\n\n\n\n\n\nTree view in iTol\n\n\n\n\n\n\n\n\nColor range by class\n\n\n\n\n$ PhySpeTree iview -i 191speciesnames.txt --range -a class\nColor range by class was complete.\nColor range annotation was save in iview/range_color_by_class.txt\n\n$ cd iview\n\n$ cat range_color_by_class.txt \nTREE_COLORS\nSEPARATOR TAB\nDATA\nneq     range   #4A959E Nanoarchaeota\npai     range   #58CD80 Crenarchaeota\nape     range   #58CD80 Crenarchaeota\nsto     range   #58CD80 Crenarchaeota\nssoa    range   #58CD80 Crenarchaeota\ntvo     range   #639BB0 Euryarchaeota\ntac     range   #639BB0 Euryarchaeota\nafu     range   #639BB0 Euryarchaeota\nhal     range   #639BB0 Euryarchaeota\nmac     range   #639BB0 Euryarchaeota\nmma     range   #639BB0 Euryarchaeota\npfu     range   #639BB0 Euryarchaeota\npho     range   #639BB0 Euryarchaeota\npab     range   #639BB0 Euryarchaeota\nmth     range   #639BB0 Euryarchaeota\nmka     range   #639BB0 Euryarchaeota\nmmp     range   #639BB0 Euryarchaeota\nmja     range   #639BB0 Euryarchaeota\ngla     range   #C5D49E Diplomonads\nlma     range   #899DDB Euglenozoa\ntps     range   #7DD2ED Stramenopiles\ncho     range   #99A01A Alveolates\n.....\n\n\n\n\n\n\nTree view in iTol\n\n\n\n\n\n\nAuto build a plant tree\n\n\n1.Prepare organisms names list\n\n\nHere we automatically reconstructed 52 plants phylogenetic tree by PhySpeTree use highly conserved protein method. The species list \ndownload\n.\n\n\n$ cat 52plantsnames.txt\naly\nath\natr\nbdi\nbpg\nbrp\nbvg\ncam\nccp\ncic\ncit\ncme\ncmo\n.....\n\n\n\n\n2.Reconstruct phylogenetic tree by highly conserved protein method\n\n\n$ PhySpeTree autobuild -i 52plantsnames.txt -o 52plant_pro --srna -t 6\nLoading organisms names success.....\n\nThe result are store in:52plant_pro\n\nNow loading data and constructing species phylogenetic tree......\nWed, 07 Sep 2016 18:48:35 kegg DB[line:105] INFO Read organisms names success\nWed, 07 Sep 2016 18:48:44 kegg DB[line:92] INFO Retrieve highly conserved protein 'Leucyl-tRNA synthetase' success and store in p1.fasta file\nWed, 07 Sep 2016 18:48:53 kegg DB[line:92] INFO Retrieve highly conserved protein 'Metal-dependent proteases with chaperone activity' success and store in p2.fasta file\nWed, 07 Sep 2016 18:49:01 kegg DB[line:92] INFO Retrieve highly conserved protein 'Phenylalanine-tRNA synthethase alpha subunit' success and store in p3.fasta file\nWed, 07 Sep 2016 18:49:10 kegg DB[line:92] INFO Retrieve highly conserved protein 'Preprotein translocase subunit SecY' success and store in p4.fasta file\nWed, 07 Sep 2016 18:49:17 kegg DB[line:92] INFO Retrieve highly conserved protein 'Ribosomal protein L11' success and store in p5.fasta file\nWed, 07 Sep 2016 18:49:25 kegg DB[line:92] INFO Retrieve highly conserved protein 'Ribosomal protein L13' success and store in p6.fasta file\nWed, 07 Sep 2016 18:49:32 kegg DB[line:92] INFO Retrieve highly conserved protein 'Ribosomal protein L15' success and store in p7.fasta file\nWed, 07 Sep 2016 18:49:40 kegg DB[line:92] INFO Retrieve highly conserved protein 'Ribosomal protein L16/L10E' success and store in p8.fasta file\nWed, 07 Sep 2016 18:49:48 kegg DB[line:92] INFO Retrieve highly conserved protein 'Ribosomal protein L18' success and store in p9.fasta file\nWed, 07 Sep 2016 18:50:01 kegg DB[line:92] INFO Retrieve highly conserved protein 'Ribosomal protein L22' success and store in p10.fasta file\nWed, 07 Sep 2016 18:50:08 kegg DB[line:92] INFO Retrieve highly conserved protein 'Ribosomal protein L3' success and store in p11.fasta file\nWed, 07 Sep 2016 18:50:16 kegg DB[line:92] INFO Retrieve highly conserved protein 'Ribosomal protein L5' success and store in p12.fasta file\nWed, 07 Sep 2016 18:50:24 kegg DB[line:92] INFO Retrieve highly conserved protein 'Ribosomal protein L6P/L9E' success and store in p13.fasta file\nWed, 07 Sep 2016 18:50:31 kegg DB[line:92] INFO Retrieve highly conserved protein 'Ribosomal protein S11' success and store in p14.fasta file\nWed, 07 Sep 2016 18:50:40 kegg DB[line:92] INFO Retrieve highly conserved protein 'Ribosomal protein S17' success and store in p15.fasta file\nWed, 07 Sep 2016 18:50:48 kegg DB[line:92] INFO Retrieve highly conserved protein 'Ribosomal protein S2' success and store in p16.fasta file\nWed, 07 Sep 2016 18:50:56 kegg DB[line:92] INFO Retrieve highly conserved protein 'Ribosomal protein S4' success and store in p17.fasta file\nWed, 07 Sep 2016 18:51:04 kegg DB[line:92] INFO Retrieve highly conserved protein 'Ribosomal protein S5' success and store in p18.fasta file\nWed, 07 Sep 2016 18:51:11 kegg DB[line:92] INFO Retrieve highly conserved protein 'Ribosomal protein S8' success and store in p19.fasta file\nWed, 07 Sep 2016 18:51:25 kegg DB[line:92] INFO Retrieve highly conserved protein 'Seryl-tRNA synthetase' success and store in p20.fasta file\nWed, 07 Sep 2016 18:51:39 kegg DB[line:92] INFO Retrieve highly conserved protein 'Ribosomal protein S13' success and store in p21.fasta file\nWed, 07 Sep 2016 18:51:39 kegg DB[line:94] INFO retrieve from Kegg DB 21 highly conserved proteins\n......\n\n\n\n\n3.Get tree file\n\n\n\n\n4.Use iview annotating tree\n\n\n\n\nChange label names use \n--labels\n\n\n\n\n$ PhySpeTree iview -i 52plantsnames.txt --labels\nChange abbreviation names to full names complete\nchange labels file was save in iview/labels.txt\n\n$ cd iview\n\n$ cat labels.txt \nLABELS\nSEPARATOR TAB\nDATA\naly     Arabidopsis lyrata (lyrate rockcress)\nath     Arabidopsis thaliana (thale cress)\natr     Amborella trichopoda\nbdi     Brachypodium distachyon\nbpg     Bathycoccus prasinos\nbrp     Brassica rapa (field mustard)\nbvg     Beta vulgaris (sugar beet)\ncam     Cicer arietinum (chickpea)\nccp     Chondrus crispus (carragheen)\ncic     Citrus clementina (mandarin orange)\ncit     Citrus sinensis (Valencia orange)\ncme     Cyanidioschyzon merolae\ncmo     Cucumis melo (muskmelon)\ncrb     Capsella rubella\ncre     Chlamydomonas reinhardtii\ncsl     Coccomyxa subellipsoidea\ncsv     Cucumis sativus (cucumber)\ncvr     Chlorella variabilis\n\n.....\n\n\n\n\n\n\nTree view by iTol\n\n\n\n\n\n\n\n\nColor range by class\n\n\n\n\n$ PhySpeTree iview -i 52plantsnames.txt -o iview --range -a phylum\nColor range by class was complete.\nColor range annotation was save in iview/range_color_by_class.txt\n$ cd iview\n\n$ cat range_color_by_class.txt \nTREE_COLORS\nSEPARATOR TAB\nDATA\naly     range   #1C748D Eudicots\nath     range   #1C748D Eudicots\natr     range   #C4DE94 Basal Magnoliophyta\nbdi     range   #854B9F Monocots\nbpg     range   #784CE5 Green algae\nbrp     range   #1C748D Eudicots\nbvg     range   #1C748D Eudicots\ncam     range   #1C748D Eudicots\nccp     range   #CEDDB3 Red algae\ncic     range   #1C748D Eudicots\ncit     range   #1C748D Eudicots\ncme     range   #CEDDB3 Red algae\ncmo     range   #1C748D Eudicots\ncrb     range   #1C748D Eudicots\ncre     range   #784CE5 Green algae\ncsl     range   #784CE5 Green algae\n.....\n\n\n\n\n\n\nTree view use iview module by iTol\n\n\n\n\n\n\nExtend tree with a new organism\n\n\nSome time we want to extend tree with a new organisms, use PhySpeTree user can easy do it.\n\n\nExtend tree by 16s SSU rRNA method\n\n\n\n\nConcept\n\n\n\n\n\n\nHere we extend tree of life with a new organism \nLokiarchaeum sp. GC14_75 (loki)\n.\n\n\n1.Prepare new organism SSU rRNA sequence\n\n\nWhen use SSU rRNA method to extend a new organism user need prepare the new organism SSU rRNA sequence, Here we prepared the new organism \nLokiarchaeum sp. GC14_75 (loki)\n\n16s rRNA sequence save with FASTA format. example download \nextend_rna_olki.fasta\n\n\n$ cat extend_rna_olki.fasta\n\nloki\nGAGAUGGGUACUGAGACAACGACCCAGGCCUUACGAGGCGCAGCAGGCGCGAAACCUCCGCAAUACACGAAAGUGUGACG\nGGGUUACCCAAAGUGUUCAAUUAUGAACUGUGGUAGGUGAGUAAUGUUCCCUACUAGAAAGGAGAGGGCAAGGCUGGUGC\nCAGCCGCCGCGGUAAAACCAGCUCUUCAAGUGGUCGGGAUAAUUAUUGGGCUUAAAGUGUCCGUAGCCGGUUUAGUAAGU\nUCCUGGUAAAAUCGGGUAGCUUAACUAUCUGUAUGCUAGGAAUACUGCUAUACUAGAGGACGGGAGAGGUCUGAGGUACU\nACAGGGGUAGGGGUGAAAUCUUAUAAUCCUUGUAGGACCACCAGUGGCGAAGGCGUCAGACUGGAACGUGCCUGACGGUG\nAGGGACGAAAGCCAGGGGAGCGAACCGGAUUAGAUACCCGGGUAGUCCUGGCCGUAAACGAUGCAUACUAGGUGAUGGCA\nUGGCCAUGAGCCAUGUCAGUGCCGUAGGGAAACCGUUAAGUGUGCCGCCUGGGAAGUACGGUCGCAAGGCUAAAACUUAA\nAGGAAUUGGCGGGGGAGCACCACAAGGGGUGAAGCCUGCGGUUCAAUUGGACUCAACGCCGGGAAACUUACCAGGGGAGA\nCAGCAGAAUGAUGGUCAGGUUGACGACCUUACCUGACAAGCUGAGAGGAGGUGCAUGGCCGUCGCCAGUUCGUGCUGUGA\nGGUAUCCUGUUAAGUCAGGCAACGAACGAGAUCCGCACCUUUAUUUGCCAGCAAGAAGUCACGACUUCGUUGGGAACACU\nAAAGGGACCGCCGUCGAUAAGACGGAGGAAGGAGCGGGCAAAGGCAGGUCAGUAUGCCCCGAAACCCCUGGGCUACACGC\nGGGCUGCAAUGGUAUGAACAAUGGGCUGUAACUCCGAAAGGAGAAACCAAUCCCGAAAUCAUAUCUCAGUGGGAAUUGUC\nGGCUGUAACCCGCCGACAUGAACGUGGAAUCCCUAGUAAUCGUGUGUCAUCAUCGCACGGUGAAUACGUCUCUGCUCCUU\nGCACACACCGCCCGUCGCUCCAUCCGAGUGUGCUAAAAAUGAGGUAUGGUCAGUCUGGUCGUAUCGAAUUUCUAGUAUGC\nGAGGGGGGAGAAGUCGUAACAAGGUAGCCGUAGGGGAACCUGCGGCUGGAUCACCUCCU\n\n\n\n\n\n2.Reconstruct phylogenetic tree by SSU rRNA extend with a new organism\n\n\nReconstruct phylogenetic tree by SSU rRNA method, you should use \n--esrna\n to specify the method and use \n-e\n parameter specify\nthe extend organism SSU rRNA sequence file.\n\n\n$ PhySpeTree autobuild -i 191speciesnames.txt -o extend_rna -e extend_rna_loki.fasta --esrna -t 6\nLoading organisms names success.....\n\nThe result are store in:extend_rna\n\nNow loading data and constructing species phylogenetic tree......\n2016-09-08 14:49:15,423 Checking organisms INFO: The organism: neq\n2016-09-08 14:49:15,424 Checking organisms INFO: The organism: ape\n2016-09-08 14:49:15,424 Checking organisms INFO: The organism: tac\n2016-09-08 14:49:15,424 Checking organisms INFO: The organism: mmp\n2016-09-08 14:49:15,424 Checking organisms INFO: The organism: gla\n2016-09-08 14:49:15,424 Checking organisms INFO: The organism: tps\n2016-09-08 14:49:15,424 Checking organisms INFO: The organism: cho\n2016-09-08 14:49:15,424 Checking organisms INFO: The organism: ddi\n2016-09-08 14:49:15,424 Checking organisms INFO: The organism: spo\n2016-09-08 14:49:15,424 Checking organisms INFO: The organism: aga\n2016-09-08 14:49:15,424 Checking organisms INFO: The organism: tru\n2016-09-08 14:49:15,424 Checking organisms INFO: The organism: mpu\n2016-09-08 14:49:15,425 Checking organisms INFO: The organism: lin\n2016-09-08 14:49:15,425 Checking organisms INFO: The organism: ban\n2016-09-08 14:49:15,425 Checking organisms INFO: The organism: bce\n2016-09-08 14:49:15,425 Checking organisms INFO: The organism: ljo\n2016-09-08 14:49:15,425 Checking organisms INFO: The organism: san\n2016-09-08 14:49:15,425 Checking organisms INFO: The organism: spg\n2016-09-08 14:49:15,425 Checking organisms INFO: The organism: ges\n2016-09-08 14:49:15,425 Checking organisms INFO: The organism: lis\n2016-09-08 14:49:15,425 Checking organisms INFO: The organism: sco\n2016-09-08 14:49:15,425 Checking organisms INFO: The organism: cdi\n2016-09-08 14:49:15,425 Checking organisms INFO: The organism: mle\n2016-09-08 14:49:15,425 Checking organisms INFO: The organism: wsu\n2016-09-08 14:49:15,425 Checking organisms INFO: The organism: rpr\n2016-09-08 14:49:15,425 Checking organisms INFO: The organism: bpe\n2016-09-08 14:49:15,425 Checking organisms INFO: The organism: bpa\n2016-09-08 14:49:15,425 Checking organisms INFO: The organism: ppr\n2016-09-08 14:49:15,425 Checking organisms WARNING: There organisms can't match in SILVA database so removed and reconstruct phylogenetic tree\n2016-09-08 14:49:15,425 16s DB INFO: Read organisms names success\n2016-09-08 14:49:15,499 16s DB INFO: Retrieve organism 'pai' 16s SSU RNA sequences data success\n2016-09-08 14:49:15,515 16s DB INFO: Retrieve organism 'sto' 16s SSU RNA sequences data success\n2016-09-08 14:49:15,532 16s DB INFO: Retrieve organism 'ssoa' 16s SSU RNA sequences data success\n2016-09-08 14:49:15,559 16s DB INFO: Retrieve organism 'tvo' 16s SSU RNA sequences data success\n2016-09-08 14:49:15,577 16s DB INFO: Retrieve organism 'afu' 16s SSU RNA sequences data success\n.....\n\n\n\n\n3.View tree by iTol\n\n\n\n\nExtend tree by highly conserved protein (hcp) method\n\n\n\n\nConcept\n\n\n\n\n\n\n1.Check prepare proteins\n\n\nWhen use highly conserved protein method reconstruct phylogenetic tree with new organism, user should use \ncheck\n method to check what\nhighly conserved protein will be prepared.\n\n\n$ PhySpeTree check -i 191speciesnames.txt --ehcp\n'Ribosomal protein L1' ----------------------------------\n p1.fasta\n\n'Leucyl-tRNA synthetase' ----------------------------------\n p2.fasta\n\n'Ribosomal protein L14' ----------------------------------\n p3.fasta\n\n'Ribosomal protein L5' ----------------------------------\n p4.fasta\n\n'Ribosomal protein S7' ----------------------------------\n p5.fasta\n\n'Ribosomal protein S8' ----------------------------------\n p6.fasta\n\n'Arginyl-tRNA synthetase' ----------------------------------\n p7.fasta\n\nCheck extend highly conserved protein is completed.\n\nCheck result is store in /check/physpe_echp_extend.txt\n......\n\n\n\n\n2. Prepare highly conserved proteins\n\n\nAfter use check command, we should prepare seven highly conserved protein store this highly conserved protein to p1 ~ p7 FASTA format files.\nThe highly protein protein names are know with \ncheck\n command. Here we prepare p1 ~ p7 highly conserved proteins to \nLokiarchaeum sp. GC14_75 (loki)\n.\nDownload \nhighly_conserved_protein_loki\n\n\n$ cd extend_pro_loki\n$ ls\np1.fasta  p2.fasta  p3.fasta  p4.fasta  p5.fasta  p6.fasta  p7.fasta\n\n$ cat p1.fasta \n\nloki\nMKVDDNLLKQSLNAAIDFSVRKKEGFKDRVRKFDETIDLIINIKDVNLNDPKNRIDKEII\nLTNEIVEEEKLNICVIASGEILLEAKKAGVETLDRDALIKLNNEEKKHKKKFAKKYEFFI\nVEDKMMRDVARYLARFLGPLGKMPKPFPTGYGIISSPGDLRTAVERYKKVIRIQMKKQPI\nIFAKIGKKSMEIDRLFDNMKTVIDFIADQMPHKFNNFKSMYLKSSMGKPIKVTEEFLKSL\nEV\n\n\n\n\n\n3.Reconstruct phylogenetic tree by highly conserved protein method extend with a new organism\n\n\n$ PhySpeTree autobuild -i 191speciesnames.txt -o extend_pro_loki -e highly_consrved_protein_loki --ehcp -t 6\nLoading organisms names success.....\n\nThe result are store in:extend_pro_loki\n\nNow loading data and constructing species phylogenetic tree......\n2016-09-08 15:49:46,391 Checking organisms INFO: The organism: ges\n2016-09-08 15:49:46,392 Checking organisms WARNING: There organisms can't match in KEGG database so removed and reconstruct phylogenetic tree\n2016-09-08 15:49:46,392 kegg DB INFO: Read organisms names success\n2016-09-08 15:50:20,604 kegg DB INFO: Retrieve highly conserved protein 'Ribosomal protein L1' success and store in p1.fasta file\n2016-09-08 15:50:57,464 kegg DB INFO: Retrieve highly conserved protein 'Leucyl-tRNA synthetase' success and store in p2.fasta file\n2016-09-08 15:51:27,257 kegg DB INFO: Retrieve highly conserved protein 'Ribosomal protein L14' success and store in p3.fasta file\n2016-09-08 15:51:55,441 kegg DB INFO: Retrieve highly conserved protein 'Ribosomal protein L5' success and store in p4.fasta file\n2016-09-08 15:52:28,429 kegg DB INFO: Retrieve highly conserved protein 'Ribosomal protein S7' success and store in p5.fasta file\n2016-09-08 15:52:59,551 kegg DB INFO: Retrieve highly conserved protein 'Ribosomal protein S8' success and store in p6.fasta file\n2016-09-08 15:53:31,157 kegg DB INFO: Retrieve highly conserved protein 'Arginyl-tRNA synthetase' success and store in p7.fasta file\n2016-09-08 15:53:31,158 kegg DB INFO: retrieve from Kegg DB 7 highly conserved proteins\n......\n\n\n\n\n\n4.View tree by iTol", 
            "title": "Tutorial"
        }, 
        {
            "location": "/tutorial/#physpetree-tutorial", 
            "text": "", 
            "title": "PhySpeTree Tutorial"
        }, 
        {
            "location": "/tutorial/#automatically-reconstruct-tree-of-life", 
            "text": "The Tree of Life always used to describe the relations between organisms are living and extinct.\nHere we reconstruct tree of life, which contain 190 organisms. We use two method automatically reconstruct phylogenetic tree. One way is use highly\nconserved protein method and another is use SSU rRNA method to reconstruct Tree of Life.", 
            "title": "Automatically reconstruct Tree of Life"
        }, 
        {
            "location": "/tutorial/#auto-build-tree-of-life-by-highly-conserved-protein-method", 
            "text": "Concept    In highly conserved protein (hcp) method automatically build phylogenetic tree by concatenate highly conserved protein to a supermatrix then build tree.\nHere we prepare 31 highly conserved proteins to automatically reconstruct phylogenetic tree. you also can searching what's the  31 highly protein  be used.", 
            "title": "Auto build Tree of life by highly conserved protein method"
        }, 
        {
            "location": "/tutorial/#1prepare-species-names-list", 
            "text": "Preparing the organisms names (abbreviated names) are same with  KEGG organisms  abbreviation. you can get KEGG organisms abbreviation form  KEGG API . \nHere we reconstructed tree of life use 191 organisms names are  download . the organisms names list as follow:  $ cat 191speciesnames.txt \nneq\npai\nape\nsto\nssoa\ntvo\ntac\nafu\n.....", 
            "title": "1.Prepare species names list"
        }, 
        {
            "location": "/tutorial/#2reconstruct-phylogenetic-tree-by-highly-conserved-protein-method", 
            "text": "When users use PhySpeTree automatically build phylogenetic tree, the users can use  --hcp  arguments to specify use highly conserved protein method to build tree. The default use 1 thread \nto reconstruct phylogenetic tree. If you want to use more threads can use  -t  parameter to set the threads to be used. Here we used the default value 1 thread to \nbuild 191 species phylogenetic tree.  $ PhySpeTree autobuild -i 191speciesnames.txt -o 191_pro --hcp\nLoading organisms names success.....\n\nThe result are store in:191_pro\n\nNow loading data and constructing species phylogenetic tree......\n2016-09-06 13:01:53,462 Checking organisms INFO: The organism: ges\n2016-09-06 13:01:53,462 Checking organisms WARNING: There organisms can't match in KEGG database so removed and reconstruct phylogenetic tree\n2016-09-06 13:01:53,462 kegg DB INFO: Read organisms names success\n2016-09-06 13:02:15,058 kegg DB INFO: Retrieve highly conserved protein 'Ribosomal protein L1' success and store in p1.fasta file\n2016-09-06 13:02:37,771 kegg DB INFO: Retrieve highly conserved protein 'Leucyl-tRNA synthetase' success and store in p2.fasta file\n2016-09-06 13:03:00,211 kegg DB INFO: Retrieve highly conserved protein 'Ribosomal protein L14' success and store in p3.fasta file\n2016-09-06 13:03:20,662 kegg DB INFO: Retrieve highly conserved protein 'Ribosomal protein L5' success and store in p4.fasta file\n2016-09-06 13:03:40,959 kegg DB INFO: Retrieve highly conserved protein 'Ribosomal protein S7' success and store in p5.fasta file\n2016-09-06 13:04:01,849 kegg DB INFO: Retrieve highly conserved protein 'Ribosomal protein S8' success and store in p6.fasta file\n2016-09-06 13:04:24,221 kegg DB INFO: Retrieve highly conserved protein 'Arginyl-tRNA synthetase' success and store in p7.fasta file\n2016-09-06 13:04:24,222 kegg DB INFO: retrieve from Kegg DB 7 highly conserved proteins", 
            "title": "2.Reconstruct phylogenetic tree by highly conserved protein method"
        }, 
        {
            "location": "/tutorial/#3get-the-tree-file", 
            "text": "", 
            "title": "3.Get the tree file"
        }, 
        {
            "location": "/tutorial/#4use-iview-module-annotating-tree", 
            "text": "PhySpeTree provide iview module to annotating tree by iTol, iTol is a very popular online tool for the display, annotation and management of phylogenetic trees.\nWhen you use iview module to annotating tree, only drop the output the generate files to your iTol account to display tree.   Change abbreviated label names to full names use  --labels  arguments.   $ PhySpeTree iview -i 191speciesnames.txt --labels\nChange abbreviation names to full names complete\nchange labels file was save in iview/labels.txt\n\n$ cd iview\n\n$ cat labels.txt \nLABELS\nSEPARATOR TAB\nDATA\nneq     Nanoarchaeum equitans\npai     Pyrobaculum aerophilum\nape     Aeropyrum pernix\nsto     Sulfolobus tokodaii\nssoa    Sulfolobus solfataricus SULA\ntvo     Thermoplasma volcanium\ntac     Thermoplasma acidophilum\nafu     Archaeoglobus fulgidus DSM 4304\nhal     Halobacterium sp. NRC-1\nmac     Methanosarcina acetivorans\nmma     Methanosarcina mazei Go1\npfu     Pyrococcus furiosus DSM 3638\npho     Pyrococcus horikoshii\npab     Pyrococcus abyssi\nmth     Methanothermobacter thermautotrophicus\nmka     Methanopyrus kandleri\nmmp     Methanococcus maripaludis S2\n.....   Drop  labels.txt  to you iTol account and view the phylogenetic tree.     Color range by phylum use  -a  parameter to specified. The default annotation by phylum.   $ PhySpeTree iview -i 191speciesnames.txt -o iview --range -a phylum\nColor range by phylum was complete.\nColor range annotation was save in iview/range_color_by_phylum.txt\n\n$ cd iview\n\n$ cat range_color_by_phylum.txt \nTREE_COLORS\nSEPARATOR TAB\nDATA\nneq     range   #996433 Archaea\npai     range   #996433 Archaea\nape     range   #996433 Archaea\nsto     range   #996433 Archaea\nssoa    range   #996433 Archaea\ntvo     range   #996433 Archaea\ntac     range   #996433 Archaea\nafu     range   #996433 Archaea\nhal     range   #996433 Archaea\nmac     range   #996433 Archaea\nmma     range   #996433 Archaea\npfu     range   #996433 Archaea\npho     range   #996433 Archaea\npab     range   #996433 Archaea\nmth     range   #996433 Archaea\nmka     range   #996433 Archaea\nmmp     range   #996433 Archaea\nmja     range   #996433 Archaea\n.....   Drop  range_color_by_phylum.txt  to you iTol account and view the phylogenetic tree.", 
            "title": "4.Use iview module annotating tree"
        }, 
        {
            "location": "/tutorial/#auto-build-tree-of-life-by-16s-ssu-rna", 
            "text": "Concept    PhySpeTree provide auto reconstruct phylogenetic tree by 16s SSU RNA, the concept of this way is use alignment organisms 16s SSU RNA and then reconstruct \nphylogenetic tree.", 
            "title": "Auto build Tree of Life by 16s SSU RNA"
        }, 
        {
            "location": "/tutorial/#1prepare-organism-names-list-191-organisms-names-list-download", 
            "text": "$ cat 191speciesnames.txt \nneq\npai\nape\nsto\nssoa\ntvo\ntac\nafu\n.....", 
            "title": "1.Prepare organism names list, 191 organisms names list download"
        }, 
        {
            "location": "/tutorial/#2reconstruct-phylogenetic-tree-by-16s-ssu-rna-method", 
            "text": "$ PhySpeTree autobuild -i 191speciesnames.txt -o 191_rna --srna\nLoading organisms names success.....\n\nThe result are store in:191_rna\n\nNow loading data and constructing species phylogenetic tree......\n2016-09-05 19:48:03,824 Checking organisms INFO: The organism: neq\n2016-09-05 19:48:03,824 Checking organisms INFO: The organism: ape\n2016-09-05 19:48:03,824 Checking organisms INFO: The organism: tac\n2016-09-05 19:48:03,824 Checking organisms INFO: The organism: mmp\n2016-09-05 19:48:03,824 Checking organisms INFO: The organism: gla\n2016-09-05 19:48:03,824 Checking organisms INFO: The organism: tps\n2016-09-05 19:48:03,824 Checking organisms INFO: The organism: cho\n2016-09-05 19:48:03,824 Checking organisms INFO: The organism: ddi\n2016-09-05 19:48:03,824 Checking organisms INFO: The organism: spo\n2016-09-05 19:48:03,824 Checking organisms INFO: The organism: aga\n2016-09-05 19:48:03,824 Checking organisms INFO: The organism: tru\n2016-09-05 19:48:03,824 Checking organisms INFO: The organism: mpu\n2016-09-05 19:48:03,824 Checking organisms INFO: The organism: lin\n2016-09-05 19:48:03,825 Checking organisms INFO: The organism: ban\n2016-09-05 19:48:03,825 Checking organisms INFO: The organism: bce\n2016-09-05 19:48:03,825 Checking organisms INFO: The organism: ljo\n2016-09-05 19:48:03,825 Checking organisms INFO: The organism: san\n2016-09-05 19:48:03,825 Checking organisms INFO: The organism: spg\n2016-09-05 19:48:03,825 Checking organisms INFO: The organism: ges\n2016-09-05 19:48:03,825 Checking organisms INFO: The organism: lis\n2016-09-05 19:48:03,825 Checking organisms INFO: The organism: sco\n2016-09-05 19:48:03,825 Checking organisms INFO: The organism: cdi\n2016-09-05 19:48:03,825 Checking organisms INFO: The organism: mle\n2016-09-05 19:48:03,825 Checking organisms INFO: The organism: wsu\n2016-09-05 19:48:03,825 Checking organisms INFO: The organism: rpr\n2016-09-05 19:48:03,825 Checking organisms INFO: The organism: bpe\n2016-09-05 19:48:03,825 Checking organisms INFO: The organism: bpa\n2016-09-05 19:48:03,825 Checking organisms INFO: The organism: ppr\n2016-09-05 19:48:03,825 Checking organisms WARNING: There organisms can't match in SILVA database so removed and reconstruct phylogenetic tree\n2016-09-05 19:48:03,825 16s DB INFO: Read organisms names success\n2016-09-05 19:48:14,354 16s DB INFO: Retrieve organism 'pai' 16s SSU RNA sequences data success\n2016-09-05 19:48:17,703 16s DB INFO: Retrieve organism 'sto' 16s SSU RNA sequences data success\n2016-09-05 19:48:20,674 16s DB INFO: Retrieve organism 'ssoa' 16s SSU RNA sequences data success\n2016-09-05 19:48:23,031 16s DB INFO: Retrieve organism 'tvo' 16s SSU RNA sequences data success\n2016-09-05 19:48:26,510 16s DB INFO: Retrieve organism 'afu' 16s SSU RNA sequences data success\n2016-09-05 19:48:28,766 16s DB INFO: Retrieve organism 'hal' 16s SSU RNA sequences data success\n2016-09-05 19:48:31,148 16s DB INFO: Retrieve organism 'mac' 16s SSU RNA sequences data success\n2016-09-05 19:48:33,579 16s DB INFO: Retrieve organism 'mma' 16s SSU RNA sequences data success\n2016-09-05 19:48:35,856 16s DB INFO: Retrieve organism 'pfu' 16s SSU RNA sequences data success\n2016-09-05 19:48:38,194 16s DB INFO: Retrieve organism 'pho' 16s SSU RNA sequences data success\n......", 
            "title": "2.Reconstruct phylogenetic tree by 16s SSU RNA method"
        }, 
        {
            "location": "/tutorial/#3get-the-tree-file_1", 
            "text": "", 
            "title": "3.Get the tree file"
        }, 
        {
            "location": "/tutorial/#4use-iview-annotating-tree", 
            "text": "Change abbreviated label names to full names use  --labels   $ PhySpeTree iview -i 191speciesnames.txt --labels\nChange abbreviation names to full names complete\nchange labels file was save in iview/labels.txt\n\n$ cd iview\n\n$ cat labels.txt \nLABELS\nSEPARATOR TAB\nDATA\nneq     Nanoarchaeum equitans\npai     Pyrobaculum aerophilum\nape     Aeropyrum pernix\nsto     Sulfolobus tokodaii\nssoa    Sulfolobus solfataricus SULA\ntvo     Thermoplasma volcanium\ntac     Thermoplasma acidophilum\nafu     Archaeoglobus fulgidus DSM 4304\nhal     Halobacterium sp. NRC-1\nmac     Methanosarcina acetivorans\nmma     Methanosarcina mazei Go1\npfu     Pyrococcus furiosus DSM 3638\npho     Pyrococcus horikoshii\npab     Pyrococcus abyssi\nmth     Methanothermobacter thermautotrophicus\nmka     Methanopyrus kandleri\nmmp     Methanococcus maripaludis S2\n.....   Tree view in iTol     Color range by phylum   $ PhySpeTree iview -i 191speciesnames.txt -o iview --range -a phylum\nColor range by phylum was complete.\nColor range annotation was save in iview/range_color_by_phylum.txt\n\n$ cd iview\n\n$ cat range_color_by_phylum.txt \nTREE_COLORS\nSEPARATOR TAB\nDATA\nneq     range   #996433 Archaea\npai     range   #996433 Archaea\nape     range   #996433 Archaea\nsto     range   #996433 Archaea\nssoa    range   #996433 Archaea\ntvo     range   #996433 Archaea\ntac     range   #996433 Archaea\nafu     range   #996433 Archaea\nhal     range   #996433 Archaea\nmac     range   #996433 Archaea\nmma     range   #996433 Archaea\npfu     range   #996433 Archaea\npho     range   #996433 Archaea\npab     range   #996433 Archaea\nmth     range   #996433 Archaea\nmka     range   #996433 Archaea\nmmp     range   #996433 Archaea\nmja     range   #996433 Archaea\n.....   Tree view in iTol     Color range by class   $ PhySpeTree iview -i 191speciesnames.txt --range -a class\nColor range by class was complete.\nColor range annotation was save in iview/range_color_by_class.txt\n\n$ cd iview\n\n$ cat range_color_by_class.txt \nTREE_COLORS\nSEPARATOR TAB\nDATA\nneq     range   #4A959E Nanoarchaeota\npai     range   #58CD80 Crenarchaeota\nape     range   #58CD80 Crenarchaeota\nsto     range   #58CD80 Crenarchaeota\nssoa    range   #58CD80 Crenarchaeota\ntvo     range   #639BB0 Euryarchaeota\ntac     range   #639BB0 Euryarchaeota\nafu     range   #639BB0 Euryarchaeota\nhal     range   #639BB0 Euryarchaeota\nmac     range   #639BB0 Euryarchaeota\nmma     range   #639BB0 Euryarchaeota\npfu     range   #639BB0 Euryarchaeota\npho     range   #639BB0 Euryarchaeota\npab     range   #639BB0 Euryarchaeota\nmth     range   #639BB0 Euryarchaeota\nmka     range   #639BB0 Euryarchaeota\nmmp     range   #639BB0 Euryarchaeota\nmja     range   #639BB0 Euryarchaeota\ngla     range   #C5D49E Diplomonads\nlma     range   #899DDB Euglenozoa\ntps     range   #7DD2ED Stramenopiles\ncho     range   #99A01A Alveolates\n.....   Tree view in iTol", 
            "title": "4.Use iview annotating tree"
        }, 
        {
            "location": "/tutorial/#auto-build-a-plant-tree", 
            "text": "", 
            "title": "Auto build a plant tree"
        }, 
        {
            "location": "/tutorial/#1prepare-organisms-names-list", 
            "text": "Here we automatically reconstructed 52 plants phylogenetic tree by PhySpeTree use highly conserved protein method. The species list  download .  $ cat 52plantsnames.txt\naly\nath\natr\nbdi\nbpg\nbrp\nbvg\ncam\nccp\ncic\ncit\ncme\ncmo\n.....", 
            "title": "1.Prepare organisms names list"
        }, 
        {
            "location": "/tutorial/#2reconstruct-phylogenetic-tree-by-highly-conserved-protein-method_1", 
            "text": "$ PhySpeTree autobuild -i 52plantsnames.txt -o 52plant_pro --srna -t 6\nLoading organisms names success.....\n\nThe result are store in:52plant_pro\n\nNow loading data and constructing species phylogenetic tree......\nWed, 07 Sep 2016 18:48:35 kegg DB[line:105] INFO Read organisms names success\nWed, 07 Sep 2016 18:48:44 kegg DB[line:92] INFO Retrieve highly conserved protein 'Leucyl-tRNA synthetase' success and store in p1.fasta file\nWed, 07 Sep 2016 18:48:53 kegg DB[line:92] INFO Retrieve highly conserved protein 'Metal-dependent proteases with chaperone activity' success and store in p2.fasta file\nWed, 07 Sep 2016 18:49:01 kegg DB[line:92] INFO Retrieve highly conserved protein 'Phenylalanine-tRNA synthethase alpha subunit' success and store in p3.fasta file\nWed, 07 Sep 2016 18:49:10 kegg DB[line:92] INFO Retrieve highly conserved protein 'Preprotein translocase subunit SecY' success and store in p4.fasta file\nWed, 07 Sep 2016 18:49:17 kegg DB[line:92] INFO Retrieve highly conserved protein 'Ribosomal protein L11' success and store in p5.fasta file\nWed, 07 Sep 2016 18:49:25 kegg DB[line:92] INFO Retrieve highly conserved protein 'Ribosomal protein L13' success and store in p6.fasta file\nWed, 07 Sep 2016 18:49:32 kegg DB[line:92] INFO Retrieve highly conserved protein 'Ribosomal protein L15' success and store in p7.fasta file\nWed, 07 Sep 2016 18:49:40 kegg DB[line:92] INFO Retrieve highly conserved protein 'Ribosomal protein L16/L10E' success and store in p8.fasta file\nWed, 07 Sep 2016 18:49:48 kegg DB[line:92] INFO Retrieve highly conserved protein 'Ribosomal protein L18' success and store in p9.fasta file\nWed, 07 Sep 2016 18:50:01 kegg DB[line:92] INFO Retrieve highly conserved protein 'Ribosomal protein L22' success and store in p10.fasta file\nWed, 07 Sep 2016 18:50:08 kegg DB[line:92] INFO Retrieve highly conserved protein 'Ribosomal protein L3' success and store in p11.fasta file\nWed, 07 Sep 2016 18:50:16 kegg DB[line:92] INFO Retrieve highly conserved protein 'Ribosomal protein L5' success and store in p12.fasta file\nWed, 07 Sep 2016 18:50:24 kegg DB[line:92] INFO Retrieve highly conserved protein 'Ribosomal protein L6P/L9E' success and store in p13.fasta file\nWed, 07 Sep 2016 18:50:31 kegg DB[line:92] INFO Retrieve highly conserved protein 'Ribosomal protein S11' success and store in p14.fasta file\nWed, 07 Sep 2016 18:50:40 kegg DB[line:92] INFO Retrieve highly conserved protein 'Ribosomal protein S17' success and store in p15.fasta file\nWed, 07 Sep 2016 18:50:48 kegg DB[line:92] INFO Retrieve highly conserved protein 'Ribosomal protein S2' success and store in p16.fasta file\nWed, 07 Sep 2016 18:50:56 kegg DB[line:92] INFO Retrieve highly conserved protein 'Ribosomal protein S4' success and store in p17.fasta file\nWed, 07 Sep 2016 18:51:04 kegg DB[line:92] INFO Retrieve highly conserved protein 'Ribosomal protein S5' success and store in p18.fasta file\nWed, 07 Sep 2016 18:51:11 kegg DB[line:92] INFO Retrieve highly conserved protein 'Ribosomal protein S8' success and store in p19.fasta file\nWed, 07 Sep 2016 18:51:25 kegg DB[line:92] INFO Retrieve highly conserved protein 'Seryl-tRNA synthetase' success and store in p20.fasta file\nWed, 07 Sep 2016 18:51:39 kegg DB[line:92] INFO Retrieve highly conserved protein 'Ribosomal protein S13' success and store in p21.fasta file\nWed, 07 Sep 2016 18:51:39 kegg DB[line:94] INFO retrieve from Kegg DB 21 highly conserved proteins\n......", 
            "title": "2.Reconstruct phylogenetic tree by highly conserved protein method"
        }, 
        {
            "location": "/tutorial/#3get-tree-file", 
            "text": "", 
            "title": "3.Get tree file"
        }, 
        {
            "location": "/tutorial/#4use-iview-annotating-tree_1", 
            "text": "Change label names use  --labels   $ PhySpeTree iview -i 52plantsnames.txt --labels\nChange abbreviation names to full names complete\nchange labels file was save in iview/labels.txt\n\n$ cd iview\n\n$ cat labels.txt \nLABELS\nSEPARATOR TAB\nDATA\naly     Arabidopsis lyrata (lyrate rockcress)\nath     Arabidopsis thaliana (thale cress)\natr     Amborella trichopoda\nbdi     Brachypodium distachyon\nbpg     Bathycoccus prasinos\nbrp     Brassica rapa (field mustard)\nbvg     Beta vulgaris (sugar beet)\ncam     Cicer arietinum (chickpea)\nccp     Chondrus crispus (carragheen)\ncic     Citrus clementina (mandarin orange)\ncit     Citrus sinensis (Valencia orange)\ncme     Cyanidioschyzon merolae\ncmo     Cucumis melo (muskmelon)\ncrb     Capsella rubella\ncre     Chlamydomonas reinhardtii\ncsl     Coccomyxa subellipsoidea\ncsv     Cucumis sativus (cucumber)\ncvr     Chlorella variabilis\n\n.....   Tree view by iTol     Color range by class   $ PhySpeTree iview -i 52plantsnames.txt -o iview --range -a phylum\nColor range by class was complete.\nColor range annotation was save in iview/range_color_by_class.txt\n$ cd iview\n\n$ cat range_color_by_class.txt \nTREE_COLORS\nSEPARATOR TAB\nDATA\naly     range   #1C748D Eudicots\nath     range   #1C748D Eudicots\natr     range   #C4DE94 Basal Magnoliophyta\nbdi     range   #854B9F Monocots\nbpg     range   #784CE5 Green algae\nbrp     range   #1C748D Eudicots\nbvg     range   #1C748D Eudicots\ncam     range   #1C748D Eudicots\nccp     range   #CEDDB3 Red algae\ncic     range   #1C748D Eudicots\ncit     range   #1C748D Eudicots\ncme     range   #CEDDB3 Red algae\ncmo     range   #1C748D Eudicots\ncrb     range   #1C748D Eudicots\ncre     range   #784CE5 Green algae\ncsl     range   #784CE5 Green algae\n.....   Tree view use iview module by iTol", 
            "title": "4.Use iview annotating tree"
        }, 
        {
            "location": "/tutorial/#extend-tree-with-a-new-organism", 
            "text": "Some time we want to extend tree with a new organisms, use PhySpeTree user can easy do it.", 
            "title": "Extend tree with a new organism"
        }, 
        {
            "location": "/tutorial/#extend-tree-by-16s-ssu-rrna-method", 
            "text": "Concept    Here we extend tree of life with a new organism  Lokiarchaeum sp. GC14_75 (loki) .", 
            "title": "Extend tree by 16s SSU rRNA method"
        }, 
        {
            "location": "/tutorial/#1prepare-new-organism-ssu-rrna-sequence", 
            "text": "When use SSU rRNA method to extend a new organism user need prepare the new organism SSU rRNA sequence, Here we prepared the new organism  Lokiarchaeum sp. GC14_75 (loki) \n16s rRNA sequence save with FASTA format. example download  extend_rna_olki.fasta  $ cat extend_rna_olki.fasta loki\nGAGAUGGGUACUGAGACAACGACCCAGGCCUUACGAGGCGCAGCAGGCGCGAAACCUCCGCAAUACACGAAAGUGUGACG\nGGGUUACCCAAAGUGUUCAAUUAUGAACUGUGGUAGGUGAGUAAUGUUCCCUACUAGAAAGGAGAGGGCAAGGCUGGUGC\nCAGCCGCCGCGGUAAAACCAGCUCUUCAAGUGGUCGGGAUAAUUAUUGGGCUUAAAGUGUCCGUAGCCGGUUUAGUAAGU\nUCCUGGUAAAAUCGGGUAGCUUAACUAUCUGUAUGCUAGGAAUACUGCUAUACUAGAGGACGGGAGAGGUCUGAGGUACU\nACAGGGGUAGGGGUGAAAUCUUAUAAUCCUUGUAGGACCACCAGUGGCGAAGGCGUCAGACUGGAACGUGCCUGACGGUG\nAGGGACGAAAGCCAGGGGAGCGAACCGGAUUAGAUACCCGGGUAGUCCUGGCCGUAAACGAUGCAUACUAGGUGAUGGCA\nUGGCCAUGAGCCAUGUCAGUGCCGUAGGGAAACCGUUAAGUGUGCCGCCUGGGAAGUACGGUCGCAAGGCUAAAACUUAA\nAGGAAUUGGCGGGGGAGCACCACAAGGGGUGAAGCCUGCGGUUCAAUUGGACUCAACGCCGGGAAACUUACCAGGGGAGA\nCAGCAGAAUGAUGGUCAGGUUGACGACCUUACCUGACAAGCUGAGAGGAGGUGCAUGGCCGUCGCCAGUUCGUGCUGUGA\nGGUAUCCUGUUAAGUCAGGCAACGAACGAGAUCCGCACCUUUAUUUGCCAGCAAGAAGUCACGACUUCGUUGGGAACACU\nAAAGGGACCGCCGUCGAUAAGACGGAGGAAGGAGCGGGCAAAGGCAGGUCAGUAUGCCCCGAAACCCCUGGGCUACACGC\nGGGCUGCAAUGGUAUGAACAAUGGGCUGUAACUCCGAAAGGAGAAACCAAUCCCGAAAUCAUAUCUCAGUGGGAAUUGUC\nGGCUGUAACCCGCCGACAUGAACGUGGAAUCCCUAGUAAUCGUGUGUCAUCAUCGCACGGUGAAUACGUCUCUGCUCCUU\nGCACACACCGCCCGUCGCUCCAUCCGAGUGUGCUAAAAAUGAGGUAUGGUCAGUCUGGUCGUAUCGAAUUUCUAGUAUGC\nGAGGGGGGAGAAGUCGUAACAAGGUAGCCGUAGGGGAACCUGCGGCUGGAUCACCUCCU", 
            "title": "1.Prepare new organism SSU rRNA sequence"
        }, 
        {
            "location": "/tutorial/#2reconstruct-phylogenetic-tree-by-ssu-rrna-extend-with-a-new-organism", 
            "text": "Reconstruct phylogenetic tree by SSU rRNA method, you should use  --esrna  to specify the method and use  -e  parameter specify\nthe extend organism SSU rRNA sequence file.  $ PhySpeTree autobuild -i 191speciesnames.txt -o extend_rna -e extend_rna_loki.fasta --esrna -t 6\nLoading organisms names success.....\n\nThe result are store in:extend_rna\n\nNow loading data and constructing species phylogenetic tree......\n2016-09-08 14:49:15,423 Checking organisms INFO: The organism: neq\n2016-09-08 14:49:15,424 Checking organisms INFO: The organism: ape\n2016-09-08 14:49:15,424 Checking organisms INFO: The organism: tac\n2016-09-08 14:49:15,424 Checking organisms INFO: The organism: mmp\n2016-09-08 14:49:15,424 Checking organisms INFO: The organism: gla\n2016-09-08 14:49:15,424 Checking organisms INFO: The organism: tps\n2016-09-08 14:49:15,424 Checking organisms INFO: The organism: cho\n2016-09-08 14:49:15,424 Checking organisms INFO: The organism: ddi\n2016-09-08 14:49:15,424 Checking organisms INFO: The organism: spo\n2016-09-08 14:49:15,424 Checking organisms INFO: The organism: aga\n2016-09-08 14:49:15,424 Checking organisms INFO: The organism: tru\n2016-09-08 14:49:15,424 Checking organisms INFO: The organism: mpu\n2016-09-08 14:49:15,425 Checking organisms INFO: The organism: lin\n2016-09-08 14:49:15,425 Checking organisms INFO: The organism: ban\n2016-09-08 14:49:15,425 Checking organisms INFO: The organism: bce\n2016-09-08 14:49:15,425 Checking organisms INFO: The organism: ljo\n2016-09-08 14:49:15,425 Checking organisms INFO: The organism: san\n2016-09-08 14:49:15,425 Checking organisms INFO: The organism: spg\n2016-09-08 14:49:15,425 Checking organisms INFO: The organism: ges\n2016-09-08 14:49:15,425 Checking organisms INFO: The organism: lis\n2016-09-08 14:49:15,425 Checking organisms INFO: The organism: sco\n2016-09-08 14:49:15,425 Checking organisms INFO: The organism: cdi\n2016-09-08 14:49:15,425 Checking organisms INFO: The organism: mle\n2016-09-08 14:49:15,425 Checking organisms INFO: The organism: wsu\n2016-09-08 14:49:15,425 Checking organisms INFO: The organism: rpr\n2016-09-08 14:49:15,425 Checking organisms INFO: The organism: bpe\n2016-09-08 14:49:15,425 Checking organisms INFO: The organism: bpa\n2016-09-08 14:49:15,425 Checking organisms INFO: The organism: ppr\n2016-09-08 14:49:15,425 Checking organisms WARNING: There organisms can't match in SILVA database so removed and reconstruct phylogenetic tree\n2016-09-08 14:49:15,425 16s DB INFO: Read organisms names success\n2016-09-08 14:49:15,499 16s DB INFO: Retrieve organism 'pai' 16s SSU RNA sequences data success\n2016-09-08 14:49:15,515 16s DB INFO: Retrieve organism 'sto' 16s SSU RNA sequences data success\n2016-09-08 14:49:15,532 16s DB INFO: Retrieve organism 'ssoa' 16s SSU RNA sequences data success\n2016-09-08 14:49:15,559 16s DB INFO: Retrieve organism 'tvo' 16s SSU RNA sequences data success\n2016-09-08 14:49:15,577 16s DB INFO: Retrieve organism 'afu' 16s SSU RNA sequences data success\n.....", 
            "title": "2.Reconstruct phylogenetic tree by SSU rRNA extend with a new organism"
        }, 
        {
            "location": "/tutorial/#3view-tree-by-itol", 
            "text": "", 
            "title": "3.View tree by iTol"
        }, 
        {
            "location": "/tutorial/#extend-tree-by-highly-conserved-protein-hcp-method", 
            "text": "Concept", 
            "title": "Extend tree by highly conserved protein (hcp) method"
        }, 
        {
            "location": "/tutorial/#1check-prepare-proteins", 
            "text": "When use highly conserved protein method reconstruct phylogenetic tree with new organism, user should use  check  method to check what\nhighly conserved protein will be prepared.  $ PhySpeTree check -i 191speciesnames.txt --ehcp\n'Ribosomal protein L1' ----------------------------------  p1.fasta\n\n'Leucyl-tRNA synthetase' ----------------------------------  p2.fasta\n\n'Ribosomal protein L14' ----------------------------------  p3.fasta\n\n'Ribosomal protein L5' ----------------------------------  p4.fasta\n\n'Ribosomal protein S7' ----------------------------------  p5.fasta\n\n'Ribosomal protein S8' ----------------------------------  p6.fasta\n\n'Arginyl-tRNA synthetase' ----------------------------------  p7.fasta\n\nCheck extend highly conserved protein is completed.\n\nCheck result is store in /check/physpe_echp_extend.txt\n......", 
            "title": "1.Check prepare proteins"
        }, 
        {
            "location": "/tutorial/#2-prepare-highly-conserved-proteins", 
            "text": "After use check command, we should prepare seven highly conserved protein store this highly conserved protein to p1 ~ p7 FASTA format files.\nThe highly protein protein names are know with  check  command. Here we prepare p1 ~ p7 highly conserved proteins to  Lokiarchaeum sp. GC14_75 (loki) .\nDownload  highly_conserved_protein_loki  $ cd extend_pro_loki\n$ ls\np1.fasta  p2.fasta  p3.fasta  p4.fasta  p5.fasta  p6.fasta  p7.fasta\n\n$ cat p1.fasta  loki\nMKVDDNLLKQSLNAAIDFSVRKKEGFKDRVRKFDETIDLIINIKDVNLNDPKNRIDKEII\nLTNEIVEEEKLNICVIASGEILLEAKKAGVETLDRDALIKLNNEEKKHKKKFAKKYEFFI\nVEDKMMRDVARYLARFLGPLGKMPKPFPTGYGIISSPGDLRTAVERYKKVIRIQMKKQPI\nIFAKIGKKSMEIDRLFDNMKTVIDFIADQMPHKFNNFKSMYLKSSMGKPIKVTEEFLKSL\nEV", 
            "title": "2. Prepare highly conserved proteins"
        }, 
        {
            "location": "/tutorial/#3reconstruct-phylogenetic-tree-by-highly-conserved-protein-method-extend-with-a-new-organism", 
            "text": "$ PhySpeTree autobuild -i 191speciesnames.txt -o extend_pro_loki -e highly_consrved_protein_loki --ehcp -t 6\nLoading organisms names success.....\n\nThe result are store in:extend_pro_loki\n\nNow loading data and constructing species phylogenetic tree......\n2016-09-08 15:49:46,391 Checking organisms INFO: The organism: ges\n2016-09-08 15:49:46,392 Checking organisms WARNING: There organisms can't match in KEGG database so removed and reconstruct phylogenetic tree\n2016-09-08 15:49:46,392 kegg DB INFO: Read organisms names success\n2016-09-08 15:50:20,604 kegg DB INFO: Retrieve highly conserved protein 'Ribosomal protein L1' success and store in p1.fasta file\n2016-09-08 15:50:57,464 kegg DB INFO: Retrieve highly conserved protein 'Leucyl-tRNA synthetase' success and store in p2.fasta file\n2016-09-08 15:51:27,257 kegg DB INFO: Retrieve highly conserved protein 'Ribosomal protein L14' success and store in p3.fasta file\n2016-09-08 15:51:55,441 kegg DB INFO: Retrieve highly conserved protein 'Ribosomal protein L5' success and store in p4.fasta file\n2016-09-08 15:52:28,429 kegg DB INFO: Retrieve highly conserved protein 'Ribosomal protein S7' success and store in p5.fasta file\n2016-09-08 15:52:59,551 kegg DB INFO: Retrieve highly conserved protein 'Ribosomal protein S8' success and store in p6.fasta file\n2016-09-08 15:53:31,157 kegg DB INFO: Retrieve highly conserved protein 'Arginyl-tRNA synthetase' success and store in p7.fasta file\n2016-09-08 15:53:31,158 kegg DB INFO: retrieve from Kegg DB 7 highly conserved proteins\n......", 
            "title": "3.Reconstruct phylogenetic tree by highly conserved protein method extend with a new organism"
        }, 
        {
            "location": "/tutorial/#4view-tree-by-itol", 
            "text": "", 
            "title": "4.View tree by iTol"
        }, 
        {
            "location": "/faq/", 
            "text": "Frequently Asked Questions (FAQ)\n\n\nPhySpeTree input/output\n\n\n1.What preparation of user should does for PhySpeTree?\n\n\nThe users should prepare a TXT file, which contain species name (abbreviated names are same with \nKEGG database\n.\none line write one species name only. For example,\norganism_example_list\n.\nYou can retrieve the Abbreviation of species names by \nKEGG API\n\n\n2.What's PhySpeTree output data mean?\n\n\nPhySpeTree output two data files, the one is a result file default names is \nOutdata\n, another is a \ntemp\n file.\n\n\nIf you reconstruct phylogenetic tree by \n--hcp\n (highly conserved protein) method, the temp files include three directory: \nconserved_protein\n, \nalignment\n and \nconcatenate\n.\n\n\n\n\nconserved_protein: Store the FASTA format files, which was highly conserved proteins retrieved by KEGG database.\n\n\nalignment: Store the sequence files has been aligned.\n\n\nconcatenate: Include concatenated highly conserved proteins data (FASTA format) and selected conserved blocks data (*.fasta-gb1 format file).\n\n\n\n\nIf you reconstruct phylogenetic tree by \n--srna\n (SSU rRNA) method, the temp files include two directory: \nrna_sequence\n and \nrna_alignment\n.\n\n\n\n\nrna_sequence: Store a file named rna_sequence.fasta, contain the SSU rRNA sequence retrieved from SILVA database.\n\n\nran_alignment: Store in the \n.fasta file is the sequence files has been aligned and the \n.fasta-gb1, \nfasta-gb1.html are select conserved blocks data (use Gblocks software),\n  the \n.phy format file is converted from has been select conserved blocks data by PhySpeTree.\n\n\n\n\nNOTE\n:\n\n\n\n\nUsers can check the quality of every aspect of data by the corresponding temp files.\n\n\n\n\nPhySpeTree reconstruct phylogenetic tree database\n\n\n1.what's the highly conserved proteins be used to reconstruct phylogenetic tree?\n\n\nPhySpeTree use 31 highly conserved proteins to reconstruct phylogenetic tree. This highly conserved proteins exclusion Horizontal Gene Transfers (HGTs) already.\n\n\ncite:\n\n\n\n\nCiccarelli F D, Doerks T, Von Mering C, et al. Toward automatic reconstruction of a highly resolved tree of life[J]. science, 2006, 311(5765): 1283-1287.\n\n\n\n\nThe 31 highly conserved proteins and corresponding KEGG database KO number as follow table:\n\n\n\n\n\n\n\n\nProtein Names\n\n\nEukaryotes KO\n\n\nProkaryotes KO\n\n\n\n\n\n\n\n\n\n\nDNA-directed RNA polymerase subunit alpha\n\n\nK03040\n\n\nK03040\n\n\n\n\n\n\nRibosomal protein L1\n\n\nK02865\n\n\nK02863\n\n\n\n\n\n\nLeucyl-tRNA synthetase\n\n\nK01869\n\n\nK01869\n\n\n\n\n\n\nMetal-dependent proteases with chaperone activity\n\n\nK01409\n\n\nK01409\n\n\n\n\n\n\nPhenylalanine-tRNA synthethase alpha subunit\n\n\nK01889\n\n\nK01889\n\n\n\n\n\n\nPredicted GTPase probable translation factor\n\n\nK06942\n\n\nK06942\n\n\n\n\n\n\nPreprotein translocase subunit SecY\n\n\nK10956\n\n\nK10956\n\n\n\n\n\n\nRibosomal protein L11\n\n\nK02868\n\n\nK02867\n\n\n\n\n\n\nRibosomal protein L13\n\n\nK02873\n\n\nK02871\n\n\n\n\n\n\nRibosomal protein L14\n\n\nK02875\n\n\nK02874\n\n\n\n\n\n\nRibosomal protein L15\n\n\nK02877\n\n\nK17437\n\n\n\n\n\n\nRibosomal protein L16/L10E\n\n\nK02866\n\n\nK02872\n\n\n\n\n\n\nRibosomal protein L18\n\n\nK02883\n\n\nK02882\n\n\n\n\n\n\nRibosomal protein L22\n\n\nK02891\n\n\nK02890\n\n\n\n\n\n\nRibosomal protein L3\n\n\nK02925\n\n\nK02906\n\n\n\n\n\n\nRibosomal protein L5\n\n\nK02932\n\n\nK02931\n\n\n\n\n\n\nRibosomal protein L6P/L9E\n\n\nK02940\n\n\nK02939\n\n\n\n\n\n\nRibosomal protein S11\n\n\nK02949\n\n\nK02948\n\n\n\n\n\n\nRibosomal protein S15P/S13E\n\n\nK02958\n\n\nK02956\n\n\n\n\n\n\nRibosomal protein S17\n\n\nK02962\n\n\nK02961\n\n\n\n\n\n\nRibosomal protein S2\n\n\nK02981\n\n\nK02967\n\n\n\n\n\n\nRibosomal protein S3\n\n\nK02985\n\n\nK02982\n\n\n\n\n\n\nRibosomal protein S4\n\n\nK02987\n\n\nK02986\n\n\n\n\n\n\nRibosomal protein S5\n\n\nK02989\n\n\nK02988\n\n\n\n\n\n\nRibosomal protein S7\n\n\nK02993\n\n\nK02992\n\n\n\n\n\n\nRibosomal protein S8\n\n\nK02995\n\n\nK02994\n\n\n\n\n\n\nRibosomal protein S9\n\n\nK02997\n\n\nK02996\n\n\n\n\n\n\nSeryl-tRNA synthetase\n\n\nK01875\n\n\nK01875\n\n\n\n\n\n\nArginyl-tRNA synthetase\n\n\nK01887\n\n\nK01887\n\n\n\n\n\n\nDNA-directed RNA polymerase beta subunit\n\n\nK03043\n\n\nK03043\n\n\n\n\n\n\nRibosomal protein S13\n\n\nK02953\n\n\nK02952\n\n\n\n\n\n\n\n\n2.How the SSU rRAN database was created?\n\n\nThe SSU rRAN database was created by \nSILVA\n SSU rRNA database project (version: SILVA SSU 123.1 release).\nIn this data the sequences haven been truncated, which means that all nucleotides that have not been aligned were removed from the sequence.", 
            "title": "FAQ"
        }, 
        {
            "location": "/faq/#frequently-asked-questions-faq", 
            "text": "", 
            "title": "Frequently Asked Questions (FAQ)"
        }, 
        {
            "location": "/faq/#physpetree-inputoutput", 
            "text": "", 
            "title": "PhySpeTree input/output"
        }, 
        {
            "location": "/faq/#1what-preparation-of-user-should-does-for-physpetree", 
            "text": "The users should prepare a TXT file, which contain species name (abbreviated names are same with  KEGG database .\none line write one species name only. For example, organism_example_list .\nYou can retrieve the Abbreviation of species names by  KEGG API", 
            "title": "1.What preparation of user should does for PhySpeTree?"
        }, 
        {
            "location": "/faq/#2whats-physpetree-output-data-mean", 
            "text": "PhySpeTree output two data files, the one is a result file default names is  Outdata , another is a  temp  file.  If you reconstruct phylogenetic tree by  --hcp  (highly conserved protein) method, the temp files include three directory:  conserved_protein ,  alignment  and  concatenate .   conserved_protein: Store the FASTA format files, which was highly conserved proteins retrieved by KEGG database.  alignment: Store the sequence files has been aligned.  concatenate: Include concatenated highly conserved proteins data (FASTA format) and selected conserved blocks data (*.fasta-gb1 format file).   If you reconstruct phylogenetic tree by  --srna  (SSU rRNA) method, the temp files include two directory:  rna_sequence  and  rna_alignment .   rna_sequence: Store a file named rna_sequence.fasta, contain the SSU rRNA sequence retrieved from SILVA database.  ran_alignment: Store in the  .fasta file is the sequence files has been aligned and the  .fasta-gb1,  fasta-gb1.html are select conserved blocks data (use Gblocks software),\n  the  .phy format file is converted from has been select conserved blocks data by PhySpeTree.   NOTE :   Users can check the quality of every aspect of data by the corresponding temp files.", 
            "title": "2.What's PhySpeTree output data mean?"
        }, 
        {
            "location": "/faq/#physpetree-reconstruct-phylogenetic-tree-database", 
            "text": "", 
            "title": "PhySpeTree reconstruct phylogenetic tree database"
        }, 
        {
            "location": "/faq/#1whats-the-highly-conserved-proteins-be-used-to-reconstruct-phylogenetic-tree", 
            "text": "PhySpeTree use 31 highly conserved proteins to reconstruct phylogenetic tree. This highly conserved proteins exclusion Horizontal Gene Transfers (HGTs) already.  cite:   Ciccarelli F D, Doerks T, Von Mering C, et al. Toward automatic reconstruction of a highly resolved tree of life[J]. science, 2006, 311(5765): 1283-1287.   The 31 highly conserved proteins and corresponding KEGG database KO number as follow table:     Protein Names  Eukaryotes KO  Prokaryotes KO      DNA-directed RNA polymerase subunit alpha  K03040  K03040    Ribosomal protein L1  K02865  K02863    Leucyl-tRNA synthetase  K01869  K01869    Metal-dependent proteases with chaperone activity  K01409  K01409    Phenylalanine-tRNA synthethase alpha subunit  K01889  K01889    Predicted GTPase probable translation factor  K06942  K06942    Preprotein translocase subunit SecY  K10956  K10956    Ribosomal protein L11  K02868  K02867    Ribosomal protein L13  K02873  K02871    Ribosomal protein L14  K02875  K02874    Ribosomal protein L15  K02877  K17437    Ribosomal protein L16/L10E  K02866  K02872    Ribosomal protein L18  K02883  K02882    Ribosomal protein L22  K02891  K02890    Ribosomal protein L3  K02925  K02906    Ribosomal protein L5  K02932  K02931    Ribosomal protein L6P/L9E  K02940  K02939    Ribosomal protein S11  K02949  K02948    Ribosomal protein S15P/S13E  K02958  K02956    Ribosomal protein S17  K02962  K02961    Ribosomal protein S2  K02981  K02967    Ribosomal protein S3  K02985  K02982    Ribosomal protein S4  K02987  K02986    Ribosomal protein S5  K02989  K02988    Ribosomal protein S7  K02993  K02992    Ribosomal protein S8  K02995  K02994    Ribosomal protein S9  K02997  K02996    Seryl-tRNA synthetase  K01875  K01875    Arginyl-tRNA synthetase  K01887  K01887    DNA-directed RNA polymerase beta subunit  K03043  K03043    Ribosomal protein S13  K02953  K02952", 
            "title": "1.what's the highly conserved proteins be used to reconstruct phylogenetic tree?"
        }, 
        {
            "location": "/faq/#2how-the-ssu-rran-database-was-created", 
            "text": "The SSU rRAN database was created by  SILVA  SSU rRNA database project (version: SILVA SSU 123.1 release).\nIn this data the sequences haven been truncated, which means that all nucleotides that have not been aligned were removed from the sequence.", 
            "title": "2.How the SSU rRAN database was created?"
        }
    ]
}